The big new feature in iTerm2 version 3.2 is a new rendering
engine that uses Metal 2. It provides much higher drawing
performance. Its availability is subject to some
configuration settings. For details, see
https://gitlab.com/gnachman/iterm2/wikis/Metal-Renderer.

Changes from 3.2.0beta6 to 3.2.0beta7:

3.2.0beta7

Bug Fixes
- Memory leaks fixed.
- Fix an occasional crash that happened after using "new tab
  with current profile".
- Fix a hang due to proc_pidinfo not returning.
- Fix a bug where badges rendered improperly on nonretina
  screens in Metal when a retina display was also attached.

Other Improvements
- URL escaping has changed in various places because the old
  API was deprecated. Various edge cases have changed.
- Don't allow "auto-hide menu bar" to be selected when
  "exclude from dock and cmd-tab app switcher" is enabled.
  They don't play nice together.
- When a split pane in tmux integration mode closes the
  nearest neighbor gets keyboard focus rather than the first
  split pane in the tab.
- Warn if the terminal tries to access the clipboard when it
  lacks permission.
- Remove deprecated app support folder automatically if it
  contains only the automatically created version.txt file.
- Improve reliability of entering native full screen.


Release notes for 3.2:

New Features
- Metal renderer
- New advanced pref: Open a new window when you click the
  dock icon and no windows are already open?
- New advanced pref: When Focus Follows Mouse is enabled,
  activate the window under the cursor when iTerm2 becomes
  active?
- New advanced pref: Underline Semantic History-selectable
  items under the cursor while holding cmd?
- You can now escape $$ in an Applescript profile command
  with $$$$
- New advanced pref (affecting semantic history's URL
  detection): URLs must contain a scheme?
- Show inline images in retina resolution. On by default in
  beta. In release, enable advanced pref "Show inline images
  at Retina resolution".
- There is a new key binding action to toggle mouse
  reporting.
- Semantic history now recognizes visual studio code-style
  "filename[line, column]" references.
- There's a new type of trigger that turns text into a
   hyperlink.
- Add support for VS Code Insiders to semantic history's
  editors.
- Change ReportCellSize to include a scale factor, which
  gives how much images will be downscaled by because of
  Retina support.
- Adds an advanced preference to setting where the threshold
  for selecting a character begins left-to-right.

Bug Fixes
- Triggers and Find now match tabs.
- Fix a bug where Triggers and Find would sometimes not see
  past a double-width character that was wrapped to the next
  line.
- When you drag a session onto itself in a window with split
  panes, do not move the window.
- Don't allow fullscreen or edge-attached windows to be
  moved with cmd-opt-shift-drag.
- Fix the color picker's eyedropper feature to respect color
  spaces.
- If multiple hotkey windows are open, do not return to the
  previously active app when one is closed.
- When changing the number of lines of scrollback, do not
  apply the change until focus leaves the text field. This
  solves a problem where erasing the value would erase your
  history.
- Scrolling with wheel mice is no longer oversensitive.
- Change behavior of prompt-before-closing for tmux
  integration. Since the list of jobs is not visible, always
  prompt when a whitelist of jobs is specified.
- Fix a bug where changing the cursor shape by escape
  sequence could be reverted by changing any profile
  property.
- When the password manager fails to get a password because
  the system Keychain denied access, show an alert
  explaining what happened.
- Ignore modifier+number when there's no matching
  pane/tab/window to switch to rather than passing it to the
  terminal as a keypress.
- Fix a bug where cmd-0 did not restore the original font
  size in tmux integration.
- Ignore malformed OSC 11.
- Fixes a bug where images could be drawn in the wrong
  column.
- Improved behavior of Yen key sending backslash for
  Japanese keyboards.
- "Select Current Command" works while the command
   is running
- Fix a bug where the offer to turn off paste bracketing
  didn't actually turn off paste bracketing.
- Fix a bug where a floating hotkey window overlapped the
  emoji panel.

Other improvements
- When not in alternate screen mode, tab will change the
  background color of cells the cursor skipped over. This
  violates tradition but is more sensible behavior for
  printing syntax-highlighted code with tabs.
- Inset marks by one pixel on the left margin.
- The rendering of faint text has been changed to take the
  background color into account.
- The toolbelt tools look nicer in the dark schemes.
- The pointing hand cursor will show only while over a
  clickable item while holding cmd.
- Tab name truncation no longer takes a parenthesized (job)
  name at the end into account when deciding whether to
  truncate the head or tail.
- Performance improvements.
- Add an advanced setting to adjust how much bolder a font
  must be to be considered the bold version of a regular
  font.
- Add an option to share the tip of the day.


