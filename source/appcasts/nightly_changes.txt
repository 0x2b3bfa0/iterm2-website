2019-02-02: Add support for legacy/traditional/modern to
beta and stable build scripts

2019-02-02: Update nightly build to use
legacy/transitional/modern appcasts

2019-02-02: Modernize app update a bit.

- Update sparkle to version 1.21.2, with my local changes
from https://github.com/gnachman/Sparkle.git (commit
2d63dd11408fda8e18fc60202143806f73ffed01) - Switch to
ED25519 signing - Modify appcast generation to use ED
signatures as well as legacy DSA signatures.  - Enable
signing for the nightly build (TBD if this actually works) -
Change nightly build to always update to nightly build,
irrespective of the 'beta' setting in prefs - Point all
builds at new appcasts, which will have only EdDSA keys.

The next beta, stable, and nightly build will be
"transitional" and will have both keys. Eventually, I will
stop distributing builds with DSA keys. Users on older
builds that have only DSA keys will need to upgrade to a
transitional build before they can upgrade to an EdDSA-only
build. The reasoning is documented here:
https://github.com/sparkle-project/Sparkle/issues/1355

2019-02-02: Make window title colors respond to key/not key
and match the shortcut accessory color

2019-02-02: Dim the window shortcut accessory when not key

2019-02-02: Tweak window number label font.

2019-02-02: Remove the menu opener. It was buggy and
annoying. Use notification instead.

2019-02-02: Make default scheme configurable and change it
from http to https. Issue 7507

2019-02-01: Rename advanced pref for disabling shadows pre
mojave

2019-02-01: Add an advanced pref to disable window shadow
pre-mojave

2019-02-01: Deal with double-attaching to a tmux session by
offering to reveal the windows/dashboard. Also fixes a bug
where burying a tmux session makes it disappear
irretrievably. Issue 7380

2019-02-01: Remove the full disk access crap. I'm optimistic
that the Info.plist change obviated its need

2019-02-01: Add NSSystemAdministrationUsageDescription. See
PR 382 for details

2019-02-01: [api] Show indeterminate progress indicator
while installing Python runtime. Various improvements to
error handling around cancellation.

2019-02-01: [api] Close the optional component downloader
after you cancel updating the Python runtime

2019-02-01: [api] When you run a python script check for an
updated version of the runtime if it's been at least 2 days
since the last check. Adds iTermPersistentRateLimitedUpdate
to make this easier to do.

2019-02-01: Don't check for runtime updates when you check
for app updates. It's silly.

2019-02-01: Finish implementing move of tmux max windows
setting to dashboard. Make it possible to open the dashboard
when not connected. Make tmux uses dedicated profile a first
class setting.

2019-02-01: Move max number of tmux windows into dashboard.
Add a type safe notification center replacement. Let's see
if it works.

2019-02-01: Assign key equivalents to buttons in alerts. Add
an advanced pref to underline them. Issue 7505

2019-01-31: Fix C-b and C-f in copy mode. Issue 7501

2019-01-31: Fix various bugs with setting the badge font

2019-01-31: Improve instructions on granting full disk
access

2019-01-31: Add advanced pref to disable modifier remapping
event tap. Issue 3316

2019-01-30: [statusbar] Respect priority in stable layout
algo. Change how priority is interpreted: larger values mean
more likely to be visible when space is tight. Fix various
bugs with showing and hiding the find component, when it is
both permanent (but invisible) and temporary.

2019-01-29: Add option to reveal contents of .its file when
opening it with the app, but not when selecting it from
Import

2019-01-29: Move iTerm-server daemon to per-user namespace.
Issue 4147 (#381)


2019-01-28: remove dead code

2019-01-28: Fix warnings and make tests pass

2019-01-28: Remove TODO, warning

2019-01-28: Clean up tmux client window titles

2019-01-28: Remove a todo

2019-01-28: Refer to dependency manager in the python
templates

2019-01-28: Deal with tabs with icons that don't have enough
space for the icon and the truncated text

2019-01-28: Sort script and deps in dependency manager. Fix
the OK button

2019-01-28: Fix importing scripts with particular python
versions. The pip3 shebang was wrong.

2019-01-28: Fix various analyzer issues and warnings. Enable
selecting python version when creating a new full
environment script

2019-01-28: Make title bar transparent for compact and
non-title-bar windows. Issue 7493

2019-01-28: [python] Get it2api's test passing

2019-01-28: [python] Add an API to get the screen contents
of a session

2019-01-28: Minor improvements to it2api test

2019-01-28: [python] Use profile module, not profile name
string (PR #380)


2019-01-28: Add an icon for recordings

2019-01-28: Show proper tick marks in instant replay window.
Also indicate range to be exported.

2019-01-28: Allow exporting a recording with a range of
times

2019-01-27: Offer to reveal errors in script console instead
of showing traceback of a failed invocation in an alert

2019-01-27: Attach the inspector button of the script
console to the bottom of the window

2019-01-27: [api] Shorten placeholder string for package
name in new script UI

2019-01-27: [api] Log function invocation errors to script
console. Reading a traceback in an alert is too hard

2019-01-27: [python] Add __repr__ to Frame

2019-01-27: Add force detach to tmux menu. Issue 7380

2019-01-26: Improve SIG verify command line program

2019-01-26: [python] Add references to examples as see-alsos
in docstrings. Fix up out of date examples and add missing
windowtitle.its file

2019-01-26: [python] Bump version

2019-01-26: Queue up installation of scripts so you can
drag-drop multiple

2019-01-26: Fix download linkes to its files

2019-01-26: [api] Fix how frames in scopes work. When there
are two or more anonymous frames, search them all for reads.
Writes go to the newest one. This fixes a bug where only
__knobs was visible in RPC driven statusbar components

2019-01-26: [python] Fix various bugs discovered while
testing examples

2019-01-26: Add signed archives of examples and test and fix
them all

2019-01-26: Put intermediate certs into signed archives

2019-01-26: Change archived script extension from
itermscript to its, which seems to make it work.

2019-01-23: [python] Bump verison

2019-01-23: [python] Remove stray single quotes. Issue 6764,
comment from 1/23

2019-01-23: When a tmux window opens, do not set the local
window's origin unless it's the first tab in the window.
Issue 7484

2019-01-23: Fix double counting of division view when laying
out the root terminal view with a hidden top tab bar. This
caused tmux window sizes to become unstable. The root cause
of this bug which I keep hitting is that the client size is
based on the tabview's height divided by the height of a
cell; we then set the window's height to accommodate a
tabview that will fit that height in cells. When those two
cacluations are not inverses it becomes unstable. In this
instance the instability was that the root terminal view was
setting the tabview height one point smaller than it should
have been for the window height. That is possible because
the calculations are relatively distant. The root terminal
view, in its rather complicated layout method, calculates
tabview height as a function of window height. The inverse
calculation, 'f(tabview height)->window height', is done in
PTYTab.tmuxSize. It is further complicated by the fact that
tmuxSize is a mind-bendingly complex algorithm because it
has to deal with split panes. I don't see a sane way to put
these two functions next to each other, unfortunately. It
would be nice to add some tests, but even that is a hairy
mess because of all the dependencies on NSWindow and
NSScrollBar that would need to be injected. At least I'll
have this commit message to jog my memory next time... Issue
7483

2019-01-23: [statusbar] Disable jobs component popover in
10.13 because it looks bad. The text views and disclosure
triangles have a 50% alpha gray background. It looks like a
compositing bug to me because modifying the textfield's
alpha value does not fade it out but hiding the textfield
hides the background. And besides it is also on the
disclosure triangles so even if I beat the textfield into
submission I'd also have to make my own disclosure triangle
and honestly just F it Apple gives me nothing and I'm tired
of fighting

2019-01-23: Prevent the open quickly window from tricking
focus follows mouse into closing itself when it shrinks
while the mouse was over it

2019-01-23: Improve status bar popovers for 10.13

2019-01-23: Add Pin Edit Session feature. Issue 7476

2019-01-21: [statusbar] Add git log to the git component

2019-01-21: Remove some code that set
titlebarAppearsTransparent which had no effect because it
was also changed when updating the window's background
color.

2019-01-21: Fix a bug where compact windows could be dragged
under the menu bar. Issue 7108

2019-01-21: Make badge position configurable in UI.

2019-01-21: Add advanced pref to swap find next/find
previous everywhere except keybinding actions. Issue 2049

2019-01-20: [statusbar] Fix autoresizing mask of popover
button in composer component

2019-01-20: [statusbar] Various improvements to knobs. Fix
entry of floating point values and labels.

2019-01-20: [statusbar] Close the composer popover when the
combobox gets keyboard focus

2019-01-20: [statusbar] Rename standard layout algorithm to
tightly packed layout algorithm

2019-01-20: [statusbar] Use 'size multiplier' instead of
'compression resistance' in stable layout

2019-01-20: [statusbar] Fix background colors in setup UI

2019-01-20: Don't draw search field progress bar when it's
at 0

2019-01-20: [statusbar] Update UI when changing layout
algorithm.

2019-01-20: [statusbar] Change appearance of fixed and
variable spacers in setup UI depending on layout algorithm

2019-01-20: Fix a warning

2019-01-20: Fix a bug where theroot terminal view would
layout incorrectly when the tab bar was hidden and the
division view was visible. The division view's height was
not accounted for and the top decoration height was used
where it should've been the bottom. Cocoa's upside down
coordinate system will never stop causing bugs.

2019-01-20: Refactor the status bar view controller a bit
and simplify things. Fix a bug where status bar background
colors weren't drawn to the edge

2019-01-20: [statusbar] Allow fixed width spacers to specify
their width and priority. Fix how the stable layout
algorithm handles priority

2019-01-20: Make it possible to reset the status bar's font
to the system default

2019-01-20: Make the statusbar layout algorith selectable

2019-01-20: Refactor status bar layout algorithm to one
class per file

2019-01-20: Fix viewsExcludingFixdedSpacers

2019-01-20: [statusbar] Make fixed-size spacers really fixed
size in stable layout algo

2019-01-20: [statusbar] Improve the stable layout algorithm
to mostly work right. Still some work to do on fixed size
spacers.

2019-01-19: [statusbar] Refactor layout algorithm into its
own file. Begin working on one that has stable offsets
instead of tight packing

2019-01-19: Tweak the look of the job tree popover

2019-01-19: [statusbar] Clicking the job component shows a
popover with a tree of running jobs.

2019-01-18: Update find driver when status bar's components
may have changed. Fixes a bug where a permanent status bar
find component didn't work because it had no driver.

2019-01-18: Add a new window type of accessory for
single-use windows. It is a floating panel so it can share a
space with a full screen window.

2019-01-18: [statusbar] Make directory component click open
a menu of ten top directories

2019-01-18: Merge branch 'master' of
github.com:gnachman/iTerm2

2019-01-18: [status bar] Improve the composer to make it
usable

2019-01-18: Add menu to git statusbar

2019-01-18: Rename statusBarComponentCreateView

2019-01-18: Change advanced settings to use a view-based
tableview. Implement an insane amount of disgusting hacks
because macOS is Apple's unloved stepchild. SRSLY BAD

2019-01-18: Check the width of subselections to avoid
running off the end of the array. Fixes a longstanding crash
that seems to repro when you restore a session with a
windowed selection whose right bounds is greater than the
width of the session.

2019-01-18: Add a bunch of logging for tabbar color

2019-01-17: Add a completion block to toggle full screen.
Delay responding the API RPC to toggle full screen until
it's actually done/failed. Issue 7438

2019-01-17: [status bar] Update composer icon. Improve
appearance of composer and mini search bar in minimal.

2019-01-17: [statusbar] Improve legibility of network
component lines

2019-01-17: [statusbar] Improve the appearance of the
composer in minimal theme + dark background

2019-01-17: Fix the shared status bar's autoresizing mask

2019-01-17: Fix status bar color in Minimal. Used the
non-selected tab color and didn't update when the bg color
changed.

2019-01-17: Improve autorainbow for light background colors

2019-01-17: [status bar] Add Auto-rainbow easter egg

2019-01-16: [status bar] Polish the composer a bit. Make it
look nicer and more usable.

2019-01-16: Fix underline masking in traditional renderer.
Underlined text not beginning at column 0 was masked
incorrectly.

2019-01-15: [statusbar] Show colors in components in status
bar setup

2019-01-15: Fixes a bug where underline offsets were
computed incorrectly. The INSANELY confusing
NSFontAttributeName and NSFontNameAttribute got me. F7U12

2019-01-15: [statusbar] Run four concurrent git poll
workers. Each takes a separate shard of paths so that if one
hangs others have a chance to work on non-network file
systems. Also don't update them when not visible, but do
update immediately when one becomes visible.

2019-01-15: [statusbar] Tweak spacing of git component. Move
dirty flag to be next to branch name.

2019-01-14: Introduce iTermLaunchExperienceController, which
coordinates the various cold-launch activities to avoid
spamming the user too much.

Remove check for incompatible software, which is outdated
and was never very useful.

Fix a bug in the onboarding window where clicking a page
indicator not adjacent to the current page would animate
wrong. NSPageController lived up to my expectations,
unfortunately.

Improve appVersionBeforeThisLaunch to work before
initializeUserDefaults is called.

Revamp about box and link it to onboarding window.

2019-01-14: Add onboarding UI to show off features of 3.3.
Not yet enabled.

2019-01-13: [api docs] Remove session. in variablenames

2019-01-13: [api] Deprecate session. namespace in session
variable context. Add it as an alias to the session
variables for backward compatibility.

2019-01-13: [api] enable closing the scripting inspector
with cmd-w

2019-01-13: [python] Change session.foo to foo in examples
in code comments

2019-01-13: [api docs] Change session.foo to foo

2019-01-13: Improve error reporting when downloading the
python runtime fails

2019-01-13: [api] Tweak wording in optional component
downloader to say Installing instead of Finished.

2019-01-13: Fix a bunch of warnings

2019-01-13: [api] Add dependency editor. Fix various bugs
with using the proper python version.

2019-01-12: [statusbar] Make it possible to have a single
status bar per window rather than per-pane, by a preference.
This makes status bars with tmux make a lot more sense.
Fixes a bunch of bugs with status bar colors and full screen
layout bugs.

2019-01-11: [api] Fix pip3's shebang when installing a
full-environment script so deps are only added to the folder
for the script, not globally

2019-01-11: Allow the mouse to move up to three points
during a drag and it will still be treated as a click,
unless something happens that commits it to the drag (for
example, changing the selection or beginning an image drag).
Issue 7465

2019-01-11: Add advanced pref to never use fastpath strings
so even alphanumeric characters can belong to ligatures.
Issue 7461

2019-01-10: If you select a hidden pane in a maximized tab
with open quickly switch to it without unmaximizing. Issue
6426

2019-01-08: Add Stop status icon

2019-01-08: [cherrypick from 3.2] When you open system prefs
show a second alert reminding you of the steps. Issue 7458

2019-01-08: Don't closedir on null if the Safari directory
doesn't exist yet

2019-01-08: Log more info on buffer overrun for bitmap data

2019-01-08: [cherrypicked from 3.2] Do not send SIGWINCH
during drag over maximized pane. Issue 7279

2019-01-08: Make secure keyboard entry menu item more sane.

1. Selecting it toggles whether iTerm2 wants secure keyboard
entry.  2. The menu item shows a "mixed" state if it's on
but we don't desired it to be on. Presumably if we desired
it on then it's on, so no need for a mixed state there.

Issue 2078.

2019-01-08: Avoid needless NSUserDefaults calls that are
quite slow in cadence controller delegate

2019-01-08: [cherrypick from 3.2] Add a CPU profiler to
track down issues like 7421

2019-01-08: [cherrypick from 3.2 of 2 commits] Enable
fastpath underlines in the legacy renderer. Issue 7437

After years of frustration I finally figured this one out!
It was trying not to set the font on the graphics context if
the font hasn't changed becaues it's slow. That was wrong
because the *context* changed, which is why the alpha mask
wasn't getting drawn into. This absolutely sucked to debug
both this time and in 2014, mostly because the CG APIs are
such a bloody mess of state and implicit dependencies.

2019-01-08: [cherrypick from 3.2] Refactor underline drawing
code so it makes sense

2019-01-08: [cherrypick from 3.2] Fix a bug where the
password manager won't open except by a trigger. Issue 7429

2019-01-07: Add more debug logging to paste to show
everything in the pasteboard for issue 1428

2019-01-07: Add a raw key mapper as an experiment

2019-01-06: Add support for application (keypad and cursor)
keys to CSI u.

2019-01-06: Add buried sessions to script inspector. Update
icons.

2019-01-06: Add a picker to the scripting inspector

2019-01-05: Add menu to variables table in script inspector

2019-01-05: Add context menu, mess around with auto layout

2019-01-05: Add refresh button to scripting inspector

2019-01-05: Fine tune scripting inspector look

2019-01-05: Polish up the script inspector

2019-01-05: Bravely use auto layout

2019-01-05: Begin adding scripting inspector

2019-01-05: Refactor variables, splitting classes into
separate files. Fix a bug where the tab child was restored
from an arrangement overwriting the real one.

2019-01-05: Improve suggestions for nonterminals

2019-01-05: Expand nonterminals in path suggestions. Improve
how referenced variables are tracked to always be relative
to the deepest context. In other words, don't record a use
of session.tab.currentSession.session.name; instead record
session.name.

2019-01-05: Improve function call suggestions to not select
anything.

2019-01-03: Offer advanced setting for Tab bar height (#379)

* Offer advanced setting for Tab bar height * Fix
capitalization * Sort accessors

2019-01-02: Add various exceptions to CSI u support for
backward compatibility.

2019-01-01: Remove bad key mappings when enabling CSI u

2019-01-01: Send esc+ when only option is pressed.
