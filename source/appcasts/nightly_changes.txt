2019-10-12: Disable quicklook if it's disabled systemwide.
Issue 8384.

Discovered by doing this while toggling the setting:
  log stream --level=debug | grep "wrote the key"

2019-10-12: Fix padding of broken pipe message

2019-10-12: Fix a bug where setting the icon title when
showing Profile + Session name caused the profile name to go
away. Issue 8380

2019-10-12: Reverse the order in which the API helper
activates app/window/tab/session because activating a tab
has the side-effect of changing which session is active

2019-10-12: Update tooltip for brighten bold

2019-10-12: Separate 'use custom bold color' from 'brighten
bold colors', which previously were confusingly grouped into
a single setting. The new Brighten feature only affects ANSI
colors 1-8 and does not affect the default color (since it's
not obvious whether lightening or darkening would actually
be appropriate, and the custom bold color covers that case).
Issue 8371

2019-10-12: [python] Add stty example

2019-10-11: Add advanced pref to disable tabbar tooltips.
Issue 8370

2019-10-11: Improve wording of advanced pref for dragging
tabbar in minimal

2019-10-11: Fix an insanity where -tabviewWidth returned the
tabbar width if it was on the left. This happened to work
because it was only called differently depending on its
internal checks. yikes

2019-10-11: Relax limits on left-side tabbar width so that
when you create a new window we can make sure the initial
session has the right number of columns. Issue 8365

2019-10-11: Move selection-related settings from Pointer to
General>Selection. Issue 8364

2019-10-10: Use tag: operator when selecting a tag in the
profile list. Issue 8348

2019-10-10: Improve quoting of username to avoid escaping
spaces. Issue 8360

2019-10-09: Save/restore tags table in profile toolbelt.
Issue 8348

2019-10-09: Fix background color of tags view

2019-10-08: 3.3.7beta1

2019-10-08: Do not send server-controlled values in tmux
integration mode.

CVE-2019-9535

- Use session number everywhere rather than session name -
Do not poll tmux for the set-titles-string, status-left, and
status-right and
  then request the values of the returned format strings.
  Use ${T:} eval instead. These features are now only
  available for tmux 2.9 and later.
- Hex-encode options saved in the tmux server to make them
unexploitable (e.g.,
  hotkeys, window affinities, window origins, etc.). The old
  values are accepted as inputs but will never be produced
  as output.

2019-10-08: Disable hardened runtime in dev builds

2019-10-08: Disable git push

2019-10-08: Add some entitlements to the hardened runtime
for issue 8345

2019-10-08: Add notarization to release_stable

2019-10-07: Close all possible open file descriptors when
starting a coprocess

2019-10-07: Don't send text when selecting from history in
composer

2019-10-07: Another unneeded import

2019-10-07: Another unused header

2019-10-07: Moved PSMTabBarControl import from
iTermPreferences header to its implementation

2019-10-07: Removed unused imports

2019-10-07: Clear composer combobox after sending text.
Issue 8346

2019-10-03: There was a bug that when the profile name
changes the autoName got copied into the autoNameFormat if
there was an icon title. That caused a problem because the
autoNameFormat updates the autoName asynchronously. If you
get to control sequences in the same spin of the runloop,
the first one of which updates the autoNameFormat and the
second one updates the profile, then the second one causes a
profile name change that copies the now-outdated outoName
into the autoNameFormat, overwriting the title change. I
don't think it ever makes sense to copy the autoName to the
autoNameFormat since the autoName is not meant to be
evaluated. I think I probably overlooked this site when
splitting the autoNameFormat out of the autoName. Issue 8319

2019-10-03: Disable working directory poller after getting a
control sequence that informs us of the working directory.
Issue 5878, felixfbecker

2019-10-03: Update Colorpicker.framework

2019-10-03: [colorpicker] Remember the hue and saturation
even when the color is black/white. Issue 8328

2019-10-03: Add more debug logging to url actions for issue
8244

2019-10-02: Added SSKeychain as a dependency to the
iTerm2Shared target, thus allowing `xcodebuild -target
iTerm2 -project iTerm2.xcodeproj` to run from the command
line without a `can't locate file for: -lSSKeychain` error

2019-10-02: Prevent images from disappearing due to scaling

2019-10-02: When installing an .its script with a minimum
version number, there was an off by one bug where it would
look for a runtime *newer* than the one in the setup file.
Came up in issue 8318

2019-09-30: Use dark knob style in dark theme with light
background. Issue 8322

2019-09-30: Better debug logging for saving restorable state

2019-09-30: Don't return early on three-finger mouseDown
when there's no action associated with it because it could
be an accessibility three-finger drag. Issue 8321

2019-09-30: Fix the frame of the hotkey window when there's
another terminal window in lion fullscreen on a different
desktop.

Before, we'd bump the hotkey window's frame up to the top of
the screen if there was a lion fullscreen terminal on the
same screen because the menu bar is normally hidden for Lion
fullscreen windows. But that would only be the case if the
fullscreen window in question were on the current desktop.
Issue 6209, comments around Sept 2019.

2019-09-30: Fix bug where exporting a signed script from
AutoLaunch wouldn't work if it there was a symlink in the
path

2019-09-30: Add resizeall example. Issue 8318

2019-09-29: [python] Add async_get_contents

2019-09-29: Improvements to minimal/compact title. Make
better use of the space. Don't go under toolbelt when it's
visible. Truncate properly when there's no icon. Left-align
and reduce right inset when it gets too long to fit with the
default insets. Issue 8258

2019-09-29: Make current textview first responder just
before applying an action. Issue 8260

2019-09-29: Bump version

2019-09-29: Fix a bug with creating new Maximized-style
windows in Minimal theme where the session is smaller than
the window

2019-09-29: Add a "Maximized" window type that is always
maximized

This differs from the full-screen type since it does not
hide the dock or menu bars.

https://github.com/gnachman/iTerm2/pull/398

Originally by Daniel Fiori <fiori.daniel@gmail.com> with
minor style tweaks by George.

2019-09-29: Fix some unevenly arranged elements in
Appearance preferences

2019-09-29: Fix a bug where the wrong area of the screen got
redrawn when there was blinking text and the session was
scrolled up. Issue 8317

2019-09-28: Wrap calls to malloc to make them safer in the
event of a water landing.

2019-09-28: Require x-iterm2-library-version header in
websocket connection

2019-09-28: Don't allow API access if multiple processes
share the socket file descriptor.

2019-09-28: Add support for downloads of larger files.
Improve download performance by simplifying bytes-downloaded
calculation.

2019-09-28: Confirm very large downloads or inline images

2019-09-28: Fix early unref in sixel.

2019-09-28: Revert "Add a "Maximized" window type that is
always maximized"

This reverts commit
1c30df94b6de0e902696fa802161ce99c60aa9ed.

2019-09-28: Revert "Block attempts to resize Maximized
windows in windowWillResize"

This reverts commit
2621fadc25593628490b3ca35284055052d83a1e.

2019-09-28: Revert "Add support for compact-themed Maximized
window type"

This reverts commit
af0915bdf4ab6e23bd6e6cb31cc516cd114dbcb5.

2019-09-28: Revert "Block attempts to move Maximized
windows"

This reverts commit
0c29c7191c8cd4d5ddfa7d966cd15ed83fcab4a0.

2019-09-28: Ensure socket path is not too long in file
descriptor client

2019-09-28: Clean up some dev logging code

2019-09-28: Check length of socket path fits.

2019-09-28: Synchronize access to _cookies

2019-09-28: Make prefs>profiles>advanced a bit wider to make
room for legacy scroller. Issue 8311

2019-09-28: Check for power source change after waking from
sleep. Issue 8310

2019-09-28: Save profiles to json rather than copying them
to pasteboard. Issue 8253

2019-09-28: [python] expose Prompt

2019-09-28: Merge branch 'add_maximized_window_type' of
https://github.com/zeroimpl/iTerm2

2019-09-28: Modify git poll script to check for xcode
license error

2019-09-26: Update colorpicker

2019-09-26: Make colorpicker use round to avoid numerical
instability

2019-09-26: Dedup unshowable tips of the day

2019-09-26: Remove tip of the day about compact window
style. Change how the next tip key is calculated to allow
gaps. Issue 8307

2019-09-26: Improve docs for preferred_size

2019-09-25: Block attempts to move Maximized windows

- Set NSWindow.movable=NO - Call canonicalizeWindowFrame in
windowDidMove:

2019-09-25: Add support for compact-themed Maximized window
type

2019-09-25: Block attempts to resize Maximized windows in
windowWillResize

2019-09-25: Add a "Maximized" window type that is always
maximized

This differs from the full-screen type since it does not
hide the dock or menu bars.

2019-09-24: Track touches unconditionally. If three finger
tap has no action and does not emulate middle click then
respect system setting for three-finger-tap causes
quicklook. The only bug left is that you can't tell if
quicklook was disabled in system prefs. Somehow that doesn't
update global user defaults. Issue 8306

2019-09-24: Escape strings with quotes instead of
backslashes to support shells like xonsh

Originally by CouleeApps with mods by gnachman

2019-09-24: Make applescript invoke function command async

2019-09-24: Add applescript 'invoke API function'

2019-09-24: Add applescript 'launch API script with name'

2019-09-24: Make splitting panes by Python API async. The
API returns only after the fork is complete but if you ask
for many splits at once they proceed in parallel.

2019-09-24: Fix a bug in iTermSessionLauncher that it did
not respect the synchronous: flag when not opening a URL or
using a session-creation block. This primarily affects
Applescript. Issue 8305.

2019-09-23: Add advanced pref to set initial alpha of
flashing indicators. Issue 8300

2019-09-23: Disable metal when drop targets are drawn. It
was never implemented in the metal renderer.

2019-09-23: Add advanced pref to not draw bottom line of
tabbar. Issue 8272

2019-09-23: When in soft alternate screen mode, if
disrespecting hard newlines doesn't get you an existing file
try again with them respected. It might get you better
results if the hard newline is legit. Issue 8297

2019-09-22: [python] Bump version

2019-09-22: Notarization for beta builds

- Enable hardened runtime - Add entitlements to avoid
breaking stuff (tested with ffmpeg recording from mic) -
Udpate beta script to perform notification - Disable
hardened runtime in debug - Add ExportOptions.plist.

2019-09-22: Add hardened build of Sparkle

2019-09-21: Fix failing test

2019-09-21: Make text field first responder in text input
alert that's exposed to Python API

2019-09-21: Make tmux command alert textfield first
responder. Issue 8295

2019-09-21: iTermActionsDidChangeNotification: use
initPrivate (#401)

In iTermActionsDidChangeNotification, use [self initPrivate]
instead of [self init], which is marked NS_UNAVAILABLE in
iTermBaseNotification.

2019-09-21: Fix wrapping of cells in the captured output
table view. Issue 8245

2019-09-21: Update vulnerable dep of websocket test

2019-09-21: Add Stop Coprocess to textview context menu

2019-09-21: Add python APIs for coprocesses. Fix broken
support for optional arguments to built-in function calls.
Issue 8294

2019-09-21: Clear existing search state (particularly
_lastStringSearchedFor) before doing a temporary search,
such as for URLs. This forces a second identical search to
start from scratch, which is desirable if the screen
contents have changed. That's not an issue for
interactively-initiated searches because they get tail-find
while temporary searches do not. Issue 8274

2019-09-19: Keep standard window buttons and shortcut
titlebar accessory from becoming visible when exiting lion
fullscreen and going to a window that doesn't have a
titlebar. Sometimes it gets wedged, too, for mysterious
reasons. I mean, it's also a mystery why the titlebar
accessory is visible when the titlebar itself isn't, but the
riddle is easily solved by observing that macOS is buggy.
Issue 8291

2019-09-19: Fix wrapping of captured output

2019-09-19: Defer clearing selection until mouse-up when
there's a click on a selection. This lets you drag it. Issue
8281.

2019-09-19: Fix inline images whose height is given in
cells. Issue 8280

2019-09-19: Add an advanced pref to save to paste history
when secure keyboard input is enabled. Issue 8263

2019-09-19: Add a title variable to the tab scope with its
actual (presentation) title

2019-09-19: Clarify how to create a new window in Python

2019-09-18: Reduce update cadence to once per second when
miniaturized. Issue 8269

2019-09-18: Treat force touch as quicklook only if enabled
in system prefs. Issue 6838

2019-09-18: Update window/tab title right away after OSC
0/1/2. Issue 8268

2019-09-17: Fix failing tests

2019-09-17: Don't redraw every time the mouse moves. Issue
8264

2019-09-17: Show a warning in paste history toolbelt and
popup if secure keyboard entry is enabled. Issue 8263

2019-09-17: Fix autoresizing mask of interpolated string
checkbox in triggers setup

2019-09-17: Use Menlo for paste history, command history,
and captured output tools. Issue 8245

2019-09-16: Add the ability to load and save keyboard and
touchbar presets. Issue 5278

2019-09-16: Make double-clicking in the SplitPanel perform
the split. Issue 8262

2019-09-15: [python] Bump version again. Somehow app.py was
out of date in 1.4

2019-09-15: [python] Bump version

2019-09-15: 3.3.5beta1

2019-09-15: Fix path in test_it2api.sh

2019-09-15: Make tmux profile use the 'Session Name' title
component by default. Issue 8255

2019-09-15: Add a preference to allow Profiles menu to open
in new windows by default (#399)

Also: * Update wording of openProfilesInNewWindow advanced
setting * Modernize wording of debug log in
updateAddressBookMenu:

2019-09-14: Remove a discrepancy between how the old pwd is
determined for new tabs vs new splits. If the current
directory is unavailable fall back to the directory it was
created with. This fixes a race condition where the pwd
isn't known while the job is starting up. Issue 8230

2019-09-14: Save a local copy of the cursor type so that the
profile is not affects when you get a control sequence that
changes it. Also fixes a bug with the touchbar mitigation
when pressing esc has the side-effect of changing the cursor
shape and it would get stuck. Issue 8172

2019-09-14: Clear selection on mousedown. Issue 8250

2019-09-14: Don't send up and down arrow keys when not in
soft alternate screen mode, even when there's no
commandRange (perhaps because shell integration is not in
use). Issue 8248

2019-09-13: Remove old busted nightly build signing code

2019-09-13: Add implementations of various tab-related
selectors that Cocoa apparently demands of everyone. Issue
8246.

2019-09-13: Update xterm keyboard presets to include
control+function keys. Issue 8241

2019-09-12: Enable code signing for nightly build. Perhaps
the dark magic will work. Issue 8218

2019-09-12: Improve legibility of git errors

2019-09-12: Add iTermSessionLauncher. Now the Python API
creates sessions asynchronously

2019-09-11: Clear selection when scroll wheel sends arrow
key. Issue 8235

2019-09-11: Enable window shadow after exiting lion full
screen. Issue 8231

2019-09-11: Add an advanced pref to enable semantic history
on network mounted filesystems

2019-09-10: Show tab color in per-pane title bar. Issue
8236.

Looks like this was lost unintentionally when the theme
class was added.

2019-09-10: Hide _NSTitlebarDecorationView (beta only).
Attempts to fix 8238. Seems like 10.14 always puts a gray
line under the bottom titlebar accessory. I don't know why
it's only sometimes present, but that seems to be a
framework bug. Issue 8238

2019-09-10: Replace the implementation of iTermWeakReference
with a safer one that uses ARC. A race condition was
discovered where you could create a new weak reference after
-dealloc gets called but before the notification gets
posted.

2019-09-10: Remove stray NSLog

2019-09-10: Fix launching tasks where the command has
backslashes inside double quotes. The way bash handles these
is super weird and counterintuitive. Overhaul escaping of
commands and args for single-use windows to fix bugs where
things didn't work when the path had spaces, such as
changing git branch via statusbar component.

2019-09-08: Update tutorial for new naming conventions

2019-09-08: Deprecate current_terminal_window in favor of
current_window

2019-09-08: Deprecate App.terminal_windows in favor of
App.windows. Issue 8224

2019-09-08: Add Session.tab, Session.window, and Tab.window.
Issue 8224

2019-09-08: Don't try to open files as URLs if we decided
not to try to stat them because they were on a network
filesystem. Issue 8227

2019-09-08: Fix height of prefs > general > closing

2019-09-08: Add better debug logging for 'i am divorced with
guid x but the sessions instance has no such guid' assertion

2019-09-08: Don't expose the existence of the placeholder
statusbar component in the context menu. Add 'disable status
bar' to it. Issue 8226

2019-09-07: Fix a bug where new Session objects would be
created when the layout updates. It was not necessary to
update tabs and windows on every session. Doing so was
problematic because the  call would only preserve the first
session of the first tab; references to other old sessions
would be replaced with references to new sessions. Issue
8225

2019-09-07: Deprecate Tab.async_select in favor of
Tab.async_activate, which has consistent naming with other
classes. Issue 8223

2019-09-07: Don't activate the app when creating a tab with
the API. Issue 8223

2019-09-07: Make it configurable whether you get prompted to
quit when there are no windows. Issue 7051

2019-09-07: Fix the build. Make travis hide all but the last
500 lines of build output because apparently bits are
expensive.

2019-09-07: Use namespaces for registered functions. Some
people had problems with duplicate RPC names because they
had multiple title providers or status bar providers that
used the same coroutine name. Probably issue 8179.

2019-09-07: When we get a mouse-up, we would copy to the
clipboard. The problem is that you can get the mouse-up when
you click in a terminal window while another app is running.
If there is a selection, it gets copied to the clipboard.
This causes a lot of confusion. I never found this because
apparently I have used cmd-tab exclusively for the last nine
years, and the bug dates back to 2003. Issue 8202 (and
dozens of others).

2019-09-06: Inline images didn't properly respect pixel
sizes, and rounded up to the next cell. Update insets so
that the exact pixel size can be granted when possible.
Also, fixes a bug in the GPU renderer where part of the
texture would be clipped if the texture was limited to 4096
pixels wide.

2019-09-06: Fix misalignment of images when there is
vertical spacing in GPU renderer vs legacy renderer. The
image needs to be shifted up by half the difference between
cell height with and without spacing. Issue 8191

2019-09-06: Modify release_stable to push

2019-09-05: When setting the icon title with OSC 1, enable
the session name component unless it's using a custom title
provider. When setting the window title with OSC 0 or OSC 2,
always include it in the window title. If users don't want
it, they have to disable 'Applications in terminal may
change the title'. Issue 8211

There's a bit of a hack here, which is that the icon name
and the profile name fight for control of the tab title.
Divorcing a session causes the icon name to be lost.

2019-09-05: Use dark appearance for scrollers in minimal
when the terminal background color is dark. Issue 8213

2019-09-05: Fix resizing panes by menu item to resize by the
proper interval. It should use the same step computation as
splitView:constrainSplitPosition:ofSubviewAt:. By using the
charWidth/lineHeight of the current session, sometimes
nothing would happen because there was an adjacent session
that had a larger font. Furthermore, the test for min/max
constraints was wrong. If the divider is moving down/right
then only the max coordinate constrain is interesting
because it limits how 'large' the offset of a divider can
be. If moving up/left, only the min coordinate constraint is
interesting. This changes the semantics of the 'direction'
parameter to be 1 for down/right and -1 for up/left, and
leaves the step size computation to PTYTab. Issue 8212

2019-09-05: Fix a bug where the cursor was advanced one cell
too far after inserting an image. Top-align sixel images
within their cells. Issue 8191

2019-09-05: Run Python API scripts through the user's shell.
Issue 8204

2019-09-05: Make textview first responder after stealing key
focus. Issue 8196

2019-09-05: Fix a bug where ascii letters that underflowed
to the left got clipped. Issue 8185.

metalImagesForGlyphKey:asciiOffset:size:Scale:emoji used
only the center point.  It looks like a cherrypick of
fccce19 broke support for ascii underflowed added in commit
fd7d393. But it was further broken by commit 36d5661, which
allows glyphSize to be different than cellSize for Mojave.
It did not account for left-side underflow. Luckily, commit
11050db fixed a similar issue with Iosevka, but only in the
vertical dimension. Because vertical and horizontal overflow
are treated differently, this change is made to affect only
the monochrome code path. See the comment in PTYSession.m
for more detail on this aspect of the change.

This commit adapts that change to also support horizontal
underflow.

2019-09-04: Truncate git branch when it gets too long to
fit. Issue 8198

2019-09-04: Translate italic -> inverse video for tmux
integration. Disable reverse-whole-screen mode, too. Issue
8203

2019-09-03: Fix a variety of crashes in 3.3.3beta2

2019-09-03: Preserve exact dimensions of sixel images when
possible. Issue 8191.

2019-09-03: Use it_makeWindowKey to avoid hiding hotkey
windows just after showing them when two have the same
keystroke

2019-09-03: Make pop icon/window title have the same effect
as setting the icon/window title. For icon title, it needs
to set the autoNameFormat. For both, it should poll tmux.
Issue 8190

2019-09-03: Fix control-backslash on Japanese keyboards and
Control-shift-/ on US keyboards. Issue 8162
