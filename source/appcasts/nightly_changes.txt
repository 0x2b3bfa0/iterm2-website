2018-12-09: Pinned, visible hotkey windows participate in
window cycle by default. Issue 7374

2018-12-09: Fix a bug where 'you must restart' alert shown
when toggling integrated/discrete GPU can't be dismissed.

2018-12-09: Don't scroll on control+page up/down in
performKeyEquivalent: if the receiver is not the first
responder. I don't know why macOS routes this event to a
view that isn't in the responder chain. Issue 7407

2018-12-09: Turn on font smoothing for non-antialiased text.
Fixes a bug in rendering PragmataPro on macOS 10.14. Issue
7394

2018-12-09: [cherrypick from 3.2] Record the use
transparency setting in the window's arrangement. Issue 7390

2018-12-09: [cherrypick from 3.2] Improve logging for event
taps

2018-12-09: [cherrypick from 3.2] Support filename(line,
column) for semantic history. Issue 7378

2018-12-09: Accept surrogate pairs as keyboard input. Issue
7337

2018-12-09: Ensure the session titlebar background and label
have the same color. Issue 7368

2018-12-09: When detaching from tmux and the gateway session
is automatically buried, restore it before closing the other
tmux tabs. This fixes a bug where it would forget it was a
hotkey window. Issue 7384.

2018-12-09: Fix a bug where the GPU renderer was never used
when a split pane was maximized.

2018-12-09: Run line buffer fast-vs-slow path sanity tests
1% of the time. Otherwise use only the slow path. Fix a
failing unit tests.

2018-12-09: [cherrypick from 3.2] Refactor a bunch of code
to help implement delta updates in metal. Add a per-line
generation that uniquely identifies it. Move per-frame state
into its own file.

2018-12-09: Tolerate illegal characters in integer profile
files (like scrollback lines) because they'll be removed
when editing ends

2018-12-09: [cherrypick from 3.2] When reloading a profile,
wait until all sessions have updated their copy of the
profile before resizing the window to fit the new session
size. This fixes a bug where a window with multiple tabs
would shrink too much when reducing the font size. It would
shrink for the first tab, and then again for the second, and
so on. By having all sessions' fonts up to date before doing
fitWindowToTab, all sessions whose font sizes changed in
concert will request the same size.

2018-12-09: Change NSLog to DLog

2018-12-09: Synchronize creation of ASCII textures so you
don't create more than one of the same concurrently.
Synchronize access to shared ASCII texture cache (oops!).

2018-12-09: Update NMSSH to the latest version of my fork,
including libssh 1.8 and openssl 1.1.1. At commit
430310826b056b4cc53596c786fa6b7a8eb04bee of
https://githug.com/gnachman/NMSSH (the 'george' branch)

2018-12-09: [cherrypick from 3.2] Fix some analyzer
complaints

2018-12-09: Fix a retain cycle. Creation block -> framedata
-> dictionary -> text transient state -> creation block

2018-12-09: [cherrypick from 3.2] Fix a bug where
wrappedLinesFromIndex:width:count: would return an empty
array when the index equaled the start of a block other than
the first. Issue 7323

2018-12-09: Avoid calling
iTermUpdateCadenceController.description

2018-12-09: [cherrypick from 3.2] Add a fast path for
frequently accessed user defaults keys that sacrifices
thread safety for better speed on the main thread only

2018-12-09: [cherrypick from 3.2] Disable metal while a tab
drag is in progress so that its snapshot may be taken. Also,
fix a bug where we'd keep retrying to create a graphics
context for sessions without windows (such as those
belonging to non-current tabs) once a second. Not having a
window now causes metalAllowed: to return NO.

2018-12-09: [cherrypick from 3.2] Fix frames of dragged tabs
and windows

2018-12-09: Fix frame of dragged tab (as long as it doesn't
leave the tab bar)

2018-12-09: When the window size changes because scroller
appearance changed, preserve its height and adjust only the
width. Issue 7318 and 6198.

2018-12-09: Rename _scrollerStyleChanged and
refreshTmuxLayoutsAndWindow to make sense. Add comments and
logging.

2018-12-09: Fix a bug where images > 255 columns repeated.
Add the hack from commit be6ca89 to the GPU renderer. Issue
7316

2018-12-09: Fix GPU renderer for ASCII characters in fonts
that have a bounding box with a negative origin. In other
words, characters that draw excessively low. Issue 7299.

2018-12-09: [cherrypick from 3.2] Fix a bug where saving an
arrangement with a maximized pane also saves its contents.
Issue 7003. Also fix a bug where VT100Screen did not strip
NSNulls properly from its content. AFAICT this never gets
turned into a plist but it is poor form.

2018-12-09: [cherrypick from 3.2] Cache and re-use ASCII
textures to reduce time taken to switch tabs

2018-12-09: Log bounding boxes of characters to debug log

2018-12-09: [cherrypick from 3.2] Fix missing tabbar in
10.13

2018-12-09: [cherrypick from 3.2] When exiting traditional
full screen mode show the menu bar after updating the
window's style mask. Changing the style mask causess
refreshTerminal: to be called, and that changes the
dock/menubar visibility. Issue 7300

2018-12-09: [cherrypick from 3.2] Refactor toggle
traditional full screen mode code

2018-12-09: [cherrypick from 3.2] Move all calls to
setHasShadow: to one method. Gives shadows to windows
without a title bar. Do not give shadows to full screen
windows (that logic was kind of there before but not done
consistently). See comment in issue 2057

2018-12-09: For compact+minimal: update colors when
switching panes and use good label colors in session title
views.

2018-12-09: Draw the background color on tab title labels
because macOS can't composite views correctly when subpixel
AA is on in Mojave. Issue 7176

2018-12-08: Add session>log>save contents. Issue 7404

2018-12-08: [python] bump version

2018-12-05: [python] Add movetab example

2018-12-05: [python] Fix a race condition where python would
send an request registering an RPC, iTerm2 would ack it and
immediately perform the RPC. The local registration happened
after the response was handled, but the RPC call beat it in
the race. This commit registers the RPC locally before
sending the request (which may or may not succeed). If the
request fails, it then unregisters it. This leaves the
script in a bit of a funny place while waiting for the
response. The RPC is registered from Python's POV but not
necessarily iTerm2's. I think this is safe, though. The
script reasonably expects the RPC to be called. The worst
case is there's some race and it gets called before it's
officially registered, but that would be a bug in iTerm2.
Issue 7232.

2018-12-05: Fix a bug where the gpu renderer didn't use
minimum contrast if the preceding character was a box
drawing character (or wrongly did use it when a box drawing
characters follows a non-boxdrawing character)

2018-12-05: Oops, forgot to include the code for the
previous commit.

2018-12-05: Add support for natively drawn powerline glyphs.
This fixes two annoying things: minimum contrast is not
applied to native box drawing glyphs, so now the powerline
arrows look right next to the solid background color when
minimum contrast is in use and; when you have extra vertical
spacing everything lines up properly. Issue 7372.

2018-12-05: Clean up prefs>keys. Make options in select
lists consistent and right align navigation shortcut labels

2018-12-05: [python] Add movetab example

2018-12-04: [api] Update cadence was not respected for
rpc-provided status bar components. Issue 7382.

2018-12-04: Refactor broadcast sessions to move most of the
code into a helper. Sessions are now tracked by their GUIDs
rather than by their views' IDs which can change when a view
is dragged. Issue 7381

2018-12-03: Remove window appearance when theme changes to
minimal. Issue 7370

2018-12-03: Fix the tab context menu in native full screen
in Mojave. Issue 7366. Mouse coordintaes were a lie when
gotten with mouseLocationOutsideOfEventStream. I have no
idea why this weird method was used. Also, the responder
chain is broken in this case, so just specify the target
directly.

2018-12-03: Only write out two parts of the Python version
in setup.py. We don't want to pin to dot releases

2018-12-03: Fix a bug where creating full environment
scripts failed because the directory was not created.
Improve logging when linking the environment in this case.

2018-12-03: Do not try to download a python runtime when
launching a full environment script. When launching a basic
script, if the python version specified only has one part
(e.g., python3) ignore it and use the latest.

2018-12-03: Ensure stanard window buttons in compact windows
have targets. Issue 7360

2018-12-02: [python] Add escindicator example

2018-12-01: [python] Add colorhost example

2018-12-01: Fix a retain cycle between iTermVariables.owner
and PTYSession that had the awful side effect of keeping
MTKView alive and drawing infinitely fast for
incomprehensible reasons (aside from MTKView being a
steaming ). Issue 7369

2018-12-01: [api] Freeze scripts at their initial Python
version forever.

My experience going from 3.6.5 to 3.7.0 was that backward
compatibility is going to be a serious problem for user
scripts. I don't want things to just break, so instead let's
keep scripts at their initial python version forever. This
seems to be keeping in the spirit of having a squillion
versions of Python installed because nobody wants to
maintain software because software is terrible. I'm sorry
for making it worse.

Details:

ARCify NSFileManager+iTerm

Respect python version in setup.py.

For basic scripts, change shebang to give 2-part python
version. When running a basic script, use that version.

If a particular python version is needed but is not present
download the newest runtime that includes it.

Change semantics of runtimes in the app support directory.
iterm2env is the latest, iterm2env-N is runtime version N,
and iterm2env-X.Y is python version X.Y (latest downloaded
bugfix) and iterm2env-X.Y.Z is python version X.Y.Z. They
are trees of hard links so they can survive deletion of each
other as upgrades happen.

When installing a python runtime for a full environment
script create hard links, don't unzip. This saves disk
space. This means the zip files don't need to be saved (so
they are not saved)

Write out setup.py files for full environment scripts
including python_requires='=x.y.z'. Scripts will be frozen
at their initial python version to avoid nasty surprises
when upgrading.

Update the basic script templates to specify Python 3.7.
I'll need to keep these up to date as new versions of Python
come out.

2018-11-29: Correct "Terminal.app Compatibility" keyboard
mapping preset to match   and   functionality. (#378)


2018-11-29: Disable address sanitizer in nightly builds

2018-11-29: Add assertions to
enumerateCharsInRange:charBlock:eolBlock: which somehow
overruns its buffer

2018-11-29: Make detection of cycles between session name
and badge less aggressive. They most both directly reference
each other.

2018-11-29: Don't follow weak links when building the
variable dictionary to avoid cycles

2018-11-29: [python] Add NewSessionMonitor and
random_color.rst example

2018-11-27: Multiply color values by 255 in
colorprests.Color's initializer when creating a color from a
proto, rather than when applying a color preset to a
profile. Now colors are always scaled 0-255. Also change the
default colorspace to calibrated since that's what iTerm2
uses internally, and profile color values often lack an
explicit color space. Add an example showing how to get
which preset a profile uses.

2018-11-25: Export simple script to full environment zip
file

2018-11-24: Make titlebar accessory look good in both light
and dark themes

2018-11-24: Add NSCopying to iTermWeakVariables

2018-11-24: Add example to put window name in tab title

2018-11-24: Fix warning

2018-11-24: Add support for weak references in variables so
sessions can link to their tabs.

2018-11-23: Improve description of advanced setting
openUntitledFile

2018-11-23: When a hotkey window is restored do not open an
untitled file. Issue 7269

2018-11-23: Fix color of titlebar accessory color on Mojave

2018-11-23: Fix warnings and errors from last commit

2018-11-23: Enable broadcasting passwords. Issue 7355

2018-11-22: Use case-sensitive path for Cocoa.h (#376)


2018-11-17: Fix failing tests

2018-11-17: Fix mark hightlight frame position (#375)


2018-11-17: Fix autoresizing masks for window title label
and window number label so they don't fly across the screen
when zooming

2018-11-17: Support option key for zoom button in compact
mode (#374)


2018-11-16: Add Proxy Icon for files (not only directories)
(#373)

* Add PTYSession.userDesiredProxyIcon

* Add VT100Screen.terminalSetProxyIcon

* Implement VT100Screen.setProxyIcon

* Add VT100ScreenDelegate.setProxyIcon

* Add WindowControllerInterface.updateProxyIcon

* Change PseudoTerminal.updateCurrentLocation to
updateProxyIcon

* Add comments

* Change url scheme

* Rename userDesiredProxyIcon->preferredProxyIcon

* Rename setProxyIcon->screenSetPreferredProxyIcon

* Fix typo and coding style

* Remove PseudoTerminal.updateCurrentLocation since it's no
longer needed

* Rename PseudoTerminal.currentLocationDidChange ->
proxyIconDidChange

* Change updateProxyIcon message path

* Fix coding style

* Fix coding style

* Remove url check in PTYSession.screenSetPreferredProxyIcon

This way if `url` is nil the proxy icon is removed

* Remove dead code

* Check empty string in screenSetPreferredProxyIcon

* Change escape sequence 1337 -> 6

* Add comments

* Rename sessionSetProxyIcon->sessionProxyIconDidChange

* Check for empty path

* Fix typo

* Fix typo

* Add terminal trust check

* Add proxy icon to Disable potentially insecure escape
sequences description

* Fix Typo

* Change empty check location

* Add NSStringITerm.startsWithDigit

* Change proxy icon escape seq logic

* Implement startsWithDigit

2018-11-15: Sanitize profiles before saving them to JSON.
Status bar components have infinities, and JSON can't
represent infinity.

2018-11-15: Somehow it is possible to get a DWC in the first
column. Do not stomp on memory if that unfortunate thing
happens. Was a hit from ASAN

2018-11-15: Merge branch 'master' of
https://github.com/gnachman/iTerm2

2018-11-15: Fix compact windows w/ applescript. Issue 7326

2018-11-12: Fix bug where wrappedLinesFromIndex failed on a
block boundary. Issue 7323

2018-11-12: Decode images in-process when address sanitizer
is enabled. This is needed while the nightly build has ASAN
turned on to root out memory corruption.

2018-11-12: [python] Fix up badge example

2018-11-10: Enable ASAN in nightly builds

2018-11-10: Tweak minimal theme backgrounds and outlines.
Fixes a stray transparent line for issue 7314.

2018-11-10: Don't open file browser when setting remove
prefs location if a gitlab prefs URL is in the pasteboard

2018-11-10: Make minimal theme split pane divider prominence
configurable through advanced prefs. Issue 7319

2018-11-10: Remove files that were migrated to
iterm2-website. Add redirects for those that are often
linked to at the now-deprecated URL. PR 372 by gonzula

2018-11-08: Fix up a misspelling

2018-11-08: Fix a lot of spelling mistakes. PR 367 by
jsoref. Minor tweaks by gln.

2018-11-08: Update travis golden for box drawing. Looks
funny in the test output because alpha<1 but in practice it
looks fine.

2018-11-06: Add RequestAttention once to bounce the app icon
only one time (#371)

Add RequestAttention=once to bounce the icon only one time.

2018-11-04: Cache the size of blocks in the line buffer to
make large history faster. Also, refactor session resizing.

2018-11-04: Change the default behavior to stretch tabs
horizontally. Two reasons: it gets us closer to looking like
system tabs at first glance; second, minimal/compact looks
awful without this and I expect this will be a popular
configuration

2018-11-04: Change how the password manager reveals and
edits passwords. Trying to do it inline in the table view
doesn't work, so do it in modal alerts instead. Fixes issue
7290

2018-11-04: Improve colors of tab bar outlines and dividers.
Tweak the frames of tab bar outlines, dividers, and fills so
everything lines up perfectly in mojave

2018-11-04: Fix how disable animations for password manager
window works. Do it the right way instead of by gross hacks.
Issue 7283.

2018-11-04: Temporarily unmaximize a tab while it is a
dragging destination. Issue 7279

2018-11-04: Fix how horizontal lines in the tab bar are
drawn. The default compositing mode punches a hole rather
than blending. Issue 7282

2018-11-04: [metal] Get rid of vestigial
postmultpliedRenderer and code to apply premultiplication

2018-11-04: Oops, I forgot to fix up the callsite and
declaration of temporarilyDisableMetal when it was renamed
to bounceMetal due to a cherrypick

2018-11-04: Use premultiplied alpha in transparent windows
with monochrome text on Mojave when using metal renderer.
This blends background colors closer to how the traditional
renderer does it. It's still slightly different which I
cannot yet account for.

2018-11-04: Fix wrong alpha when the tmux integration view
is just slightly smaller than the tab. In that case we try
to use the session's default background color for the
flexible view's color. The alpha computation was incorrect
making it appear transparent. Issue 7225

2018-11-04: Only consider the first language. Issue 7265

2018-11-04: Fix drawing non-black box drawing characters in
Mojave without subpixel AA. Issue 7275

2018-11-04: Add emacs to semantic history editors. Issue
5543

2018-11-04: Try to fix the crash due to not being able to
allocate a graphics context. This commit forces the context
to be allocated on the main thread before metal is enabled.
Failures to allocate a graphics context will lead to a once
a second retry. It seems to fail due to waking from sleep,
per issue 7267.

2018-11-04: Fix analyzer-found issues. A leak in
linesInRange (issue 7264) and an uninitialized rect
(harmless in practice, but annoys the analyzer)

2018-11-04: Avoid changing the window size while
miniaturized. After deminiaturization make sure the window
fits on the screen. Issue 7213

2018-11-04: Remove the screen anchor when the user drags the
window from one screen to another. See a detailed
investigation in issue 7099.

2018-11-04: Do not start remapping event taps when secure
input is enabled

2018-11-04: Quit asking about full disk access after opening
system prefs

2018-11-04: Fix misuse of debug log lock for pinned
messages. It could be nil.

2018-11-04: Disable metal renderer for windows that are
mostly occluded

2018-11-04: Only allocate one bitmap context per character
rendered, not 4.

2018-11-04: Fix some discrepancies in box drawing between
metal and traditional. When vertical spacing was added the
metal version was shifted up by half the shift. Also,
retinaRound was wrong and was responsible for 1-pixel errors
in Metal on retina displays. Issue 7152

2018-11-04: Trim spaces from background image filenames. Add
logging for issue 7138.

2018-11-04: Beg for full disk access.

2018-11-04: Fix bug where alerts with disclosable views
would grow when toggling the disclosure. Issue 7243

2018-11-04: Destroy and re-create MTKViews after the screen
configuration changes. It seems to be left in a broken state
if you have disconnect and reconnect a display.

2018-11-03: Don't crash when setting the current directory
to nil and using the git status bar tool

2018-11-03: Treat pressing the green button the same as
cmd-enter. Set window type to lion_full_screen while in lion
fullscreen. Set saved window type before entering. Fixes a
bug where the window content was under the tabbar. See
https://gitlab.com/gnachman/iterm2/issues/7262#note_113046927

2018-11-03: Merge branch 'master' of
https://github.com/gnachman/iterm2
