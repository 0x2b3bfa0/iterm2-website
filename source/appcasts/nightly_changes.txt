2019-07-23: Restore a lot more of the screen state (e.g.,
marks) that was previously not restored for reasons that are
unclear. Ensure the cursor appears after the session
restoration banner.

2019-07-21: 3.3.0beta15

2019-07-21: Add fs-only-status-bar example

2019-07-21: Bump python version

2019-07-21: [python, api] Improvements to subscriptions

- Make it possible to subscribe to variable change
notifications from all windows.  - Fix some python
docstrings that referred to Badges docs for info on
variables.  - Make it possible to use a VariableMonitor for
all windows.  - Add Window.async_get_variable - Fix a bug
where full screen windows didn't get
iTermDidCreateTerminalWindowNotification posted. This
prevented layout change notifications for new windows whose
style was full screen.

2019-07-21: Don't call titlebarAccessoryViewControllers on
non-titled windows because it asserts >:(. Issue 7956

2019-07-20: Fix support for full-height cursor in GPU
renderer

2019-07-20: Make GPU renderer use the proper height for the
vertical bar cursor when there is vertical spacing

2019-07-20: Fix position of frame cursor in GPU renderer to
be consistent with block cursor.

2019-07-20: Fix vertical alignment of images in GPU
renderer. The bottom margin was double counted

2019-07-20: Fix vertical alignment of box-drawing characters
when vertical spacing is enabled. Issue 7932

2019-07-20: Fix text color of advanced prefs in 10.14

2019-07-20: Expose window style through the "style" variable
in the window scope. Legal values are:

"normal"; "non-native full screen"; "native full screen";
"full-width top"; "full-width bottom"; "full-height left";
"full-height right"; "bottom"; "top"; "left"; "right";
"no-title-bar"; "compact"; "accessory";

Expose window frame as a 4-element array in variables. A
dictionary would be better but I don't want to add syntax
for dictionaries now.

2019-07-20: 3.3.0beta14

2019-07-18: Fix a bug when switching from regular to compact
or minimal in a window with at least two tabs where the
titlebar gets stuck on.

2019-07-18: Make APS switcher's delegate weak

2019-07-18: [python] Remove stray print statement

2019-07-18: Improve APS logging

2019-07-18: Improve APS logging

2019-07-18: Add option to save APS logs to script console.
Issue 7953

2019-07-18: Reset inCommand when we get FTCS A. The only
case where it would go YES->NO is when the last-received
code was B, meaning the user was entering a command when a
new prompt came along. I can make this happen in tcsh by
using tab completion when ambiguous to show options. I
tested basic functionality in bash, zsh, and fish and
everything seemed to work with regualr use, aborted
commands, and ambiguous tab completion. Issue 7954

2019-07-18: Fix a bug where you couldn't close all tabs in a
fullscreen window with cmd-shift-w

2019-07-16: Allow polling for working directory up to once a
second until the initial value is determined

2019-07-16: Update BetterFontPicker.framework

2019-07-16: [BFP] Don't use contentSizeForFrameSize because
when legacy scrollbars are enabled it uses them even when
you give it a nil verticalScrollerClass.

2019-07-16: Prevent a crash when finding the range of a word
when there's a complex character whose lookup fails.

2019-07-16: Don't crash if a function call status bar
component has a nil label

2019-07-16: Don't crash on non-UTF8 encoded commands when
getting process name/args

2019-07-14: Fix bug where you couldn't add multiple status
bar items in Catalina. Issue 7875

2019-07-13: Keep the git status bar component from eating
all resources. Limit it to 4 megs of memory, 2 seconds of
CPU time, and run it at the lowest possible priority. When
it fails, erase the content of the status bar component to
avoid showing stale info

2019-07-13: Fix semantic history test

2019-07-10: Allow instant highlight triggers to fire more
than once per line. Issue 7934

2019-07-08: If a tmux window's title is empty, show the
active session's name in the tab.

Don't crash when the user erases a tmux session's tab title
override in edit session prefs.

Fix how validating nil arguments in built-in function method
calls works.

2019-07-08: Reduce the level of floating hotkey windows so
they don't overlap the menu bar. Issue 7924

2019-07-08: Change the keyboard shortcut for zoom to
cmd-shift-0. macOS seems to really want it to be this value.
On some machines, it's forced to be although it doesn't seem
to be tied to a particular OS version. It's annoying to have
shortcuts change, but it's even worse if they differ from
machine to machine for no reason. See issue 7894.

2019-07-03: Send CSI 32;2u for shift+space in CSI u mode.
Issue 7911

2019-07-02: Make it possible to view the output from a
semantic history command when it exits with a nonzero return
code. Issue 7915

2019-07-02: Don't attempt to connect to the ssh agent if you
have a predecessor, who already did it. Seems to be a bug in
NMSSH that calling connectToAgent a second time hangs

2019-06-25: Add a profile preference to disable paste
bracketing. Issue 7908

2019-06-25: Try really hard to restore the cursor to the
right coordinate. The problem was that the initial session
size was sometimes too small so even if the cursor position
was right it would get moved somewhere nutty after resizing.
This commit: 1) saves the position in the arrangement, 2)
restores it if the cursor isn't in the last line from the
line buffer, and 3) re-restores it after fitting the window
to its tabs. Issue 7905

2019-06-24: Fix nullability annotation. PR 387

2019-06-24: Ignore function key modifier flag unless the
keycode is in the private use area. Issue 7885

2019-06-24: [api] Allow splitting an exited session. Issue
7903

2019-06-24: Use python3.7 for it2api

2019-06-24: If there is no key window, allow the hotkey
window to rise above the dock. Issue 7902

2019-06-22: Fix some bugs with window borders in minimal
theme. When there's a fake title bar the PTYTabView doesn't
need to be made smaller. When there is alegacy scroller, we
still want to draw the border in the fake title bar.

2019-06-22: Work around NSColorPanel holding an unsafe
unretained reference to its target. This caused a crash if
you use the system color picker, close the panel with a
color well, and then make a selection in the color picker.

2019-06-22: Don't crash if the power dictionary lacks values

2019-06-22: Update NMSSH to include libssh2-1.9.0

2019-06-22: Make path to git configurable by advanced
setting

2019-06-22: Retinaround the frame of standard window
buttons, shortcut, and title. Issue 7897

2019-06-22: Send a do-nothing command to tmux after
connecting. If the user presses a stray key, it will cause
the ping to be an invalid command that will be ignored.
Issue 7895

2019-06-16: Fix copying of testing3* to testing*

2019-06-16: Add support for reporting user name with @.
Issue 7890

2019-06-15: Remove code that masks off the shift key in CSI
u mode when reporting non-unicode keys. I have no idea why
this was done in the first place. Issue 7888

2019-06-14: Fix order of CSI ~ modifiers in CSI u mode.
Issue 7885

2019-06-14: Don't crash if a command runner is removed
before killScript is dispatched

2019-06-14: Add GMT clock python script

2019-06-13: Don't let autoresizing change the size of
PTYTabView when setting the window's frame from
fitWindowToTabs. It does a bad job because it runs before
the tabbar is added/removed, causing sessions to get resized
twice. Issue 7861

2019-06-12: Don't draw division view when there is a
transparent titlebar

2019-06-12: Show window border when using light theme. Issue
7884

2019-06-12: Revamp titles in tmux integration

As of tmux 2.6 and later: - Windows have names, as always -
Panes have titles (vended with #{pane_title}) - Windows kind
of have titles. If set-titles is on, the title is formatted
by set-titles-string.

We now use the #{pane_title} for session titles. If
set-titles is on then we use the formatted set-titles-string
for the tab title. The window title is the current session's
title.

In detail:

- Add iTermTmuxOptionMonitor that can request tmux
display-message either once
  or periodically for a given format.

- Add KEY_TMUX_PANE_TITLE to hold the tmux pane title. This
allows the session
  to communicate the tmux #{pane_title} to the Edit Session
  dialog. It's not a "real" preference. Its only meaning is
  to exist temporarily to solve this problem.

- Eliminate support for interpolated strings in tmux window
titles. It was
  unnecessary complexity. It can be added later if anyone
  cares.

- Remove iTermVariableKeySessionTmuxWindowTitle and
  iTermVariableKeySessionTmuxWindowTitleEval.

- Add iTermVariableKeySessionTmuxPaneTitle.

- When using tmux 2.6+, rename panes programatically when
changing a session
  title with Edit Session. Otherwise, rename the window as
  before.

- Pull the #{pane_title} periodicallyon initialization, and
various other
  times like when we get a control sequence that would
  rename a pane.

- Load set-titles and set-titles-string on connecting to
tmux to decide how
  window titles ought to work.

- Make PTYTab add the tmux indicator  to the title just
before setting the
  label. It pulls the window name from the new
  iTermVariableKeyTabTmuxWindowName variable. Use that
  instead of the session's tmuxWindowTitleEval.

- PTYTab pulls the window title periodically, such as after
creation, when we
  see a window was renamed, or when the active session
  changes.

- Use the title override variable to show
iTermVariableKeyTabTmuxWindowTitle as
  the tab title when set-title is on.

- When you rename a tab with Edit Session or Edit Tab Title,
rename the tmux
  window. This works because the default set-title-string
  includes the window name.

- Change edit session to call iterm2.set_title on the
session-being-edited's
  tab rather than updating the tabTitleOverrideFormat
  directly so it can rename the window when using tmux.

- Don't crash if you call a method with a nil completion
block.

- Change the builtin session title function to prefer the
tmux window name for
  window titles or the pane title for session titles.

- Fix the data type of iTermVariableScope.tabID to be a
string.

Here are the results of my tests

		 3.2.9/2.9a       3.3/2.5          3.3/2.9a
OSC 0            1                3                3 OSC 2
-                -                5 esc k            1
4                6 Edit Session     2                4
3 Rename window    2                4                4

-: No effect.  1: Session is renamed, but is not durable.
2: All panes and tab are renamed. Durable.  3: Rename just
session. Durable.  4: Rename tab/tmux window. Durable.  5:
Updates pane title. Durable.  6: Causes pane title to be
updated by iTerm2, but does not seem to affect tmux.

2019-06-09: Don't release the system bold font (#386)

Fixes a crash on 10.15 2019-06-09: Use a better test for
whether a single click was performed. If you do a double
click and press cmd bewteen the clicks then you get
clickCount=0. Fixes a bug where doing so removes the
selection. Issue 7871.

2019-06-09: Disregard the dock new-tab setting by default,
but add some code to show a warning if this changes in the
future.

2019-06-09: Fix incorrect use of const in shader. XCode 11
warning

2019-06-05: Ignore shift key to force vertical zoom when
zoom was invoked by a keystroke. Issue 7858

2019-06-05: Check for double-click in tabbar on mouse up,
not mouse down. In mousedown was bad because mouse-up would
think you double clicked in the just-created tab. Issue 7866

2019-06-05: [python] Bump version

2019-06-05: [python] Add mrutabs2 example

2019-06-05: [python] Rename get_tab_and_window_for_session
to get_window_and_tab_for_session to match the order of the
values in the returned tuple

2019-06-05: Post session will terminate notification before
focus changes so that lifecycle events occur before focus
events in scripts

2019-06-05: Improvements to API layout change handling.

- Send layout change notification on window close, tab
close, session
  terminate, and window create.
- Ensure layout change notification occurs before
window-did-become-key
  notification.
_ [python] App should use the layout change in the layout
change notification
  rather than requesting one. This ensure that it can
  complete updating the hierarchy synchronously, which means
  focus monitors will run after its state is updated.

2019-06-03: Add link to date format patterns from status bar
clock component format knob view

2019-06-03: Add slow 24-bit color test file

2019-06-03: Add powerline test file

2019-06-03: Show unstaged adds and deleted files in git
tool. Issue 7857

2019-06-03: Add capabilities.py

2019-06-03: Hide tab close buttons except on mouseover.
Change the preference: before, it would switch between
hide-except-on-mouseover and always-visible. Now,
hide-except-on-mouseover is the default and always-visible
is no longer an option. Old user preferences are
disregarded, except for an advanced pref that eliminated the
close button. That is migrated and affects the default
behavior of the new 'tabs have close buttons' setting. Issue
5554

2019-06-03: bump python version

2019-06-03: Fix bogus initializers in LocalWriteOnlyProfile:
apparently Python ignores the first one in this case :(

2019-06-02: Add support for title providers in tmux
integration mode.

- Add Session.async_run_tmux_command - Add session method
iterm2.run_tmux_command(command:) - Respect output of title
provider for tmux sessions.

2019-06-02: Improve logging for issue 7521

2019-06-02: Don't set the profile list view's headerView. It
comes with a better one by default. This fixes a bug where
there was a black line in the top right corner of profile
list views with headers

2019-06-02: Force the process cache to update synchronously
before checking whether a tab has running processes.

2019-06-02: Avoid invoking titleBarAccessoryViewControllers
for non-titled windows, as that triggers an assertion.

2019-06-01: Add job with arguments as title component. Issue
7289

2019-06-01: Use suggesters for profile name text fields

2019-06-01: Add commandLine variable in session scope that
includes arguments

2019-06-01: Reduce
iTermWebSocketConnectionMinimumPythonLibraryVersion to avoid
needlessly breaking existing full-environment scripts

2019-06-01: Bump min python environment version to 50 to
mitigate the error reporting issue

2019-06-01: Bump python module version to 0.69.  Catch
status code 406, which we use to mean the python lib is too
old. Print a nice error.

2019-06-01: Add Session.async_set_profile(). Issue 7782

- Add Profile.local_write_only_copy - Add
Session.async_set_profile - Make iTerm2 report its version
to the websocket client - Add a capabilities check so the
python library can be backward-compatible with older
versions of iTerm2 by using deprecated APIs for them.  - Add
the ability to set multiple profile properties at once from
Python. Deprecate the one-at-a-time API.  - If you try to
set session-specific profile values that are effectively
equal to a shared profile, just switch to the shared
profile. If they include a GUID matching a shared profile,
switch to it and then divorce and modify.  - Bump the min
library version to 0.69 - Improve validation of API requests
to set profile properties.  - Expose the set of
non-deprecated keys from iTermProfilePreferences.  - Remove
default profile values for deprecated keys
