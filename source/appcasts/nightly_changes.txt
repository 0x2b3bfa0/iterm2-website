2019-06-02: Add support for title providers in tmux
integration mode.

- Add Session.async_run_tmux_command - Add session method
iterm2.run_tmux_command(command:) - Respect output of title
provider for tmux sessions.

2019-06-02: Improve logging for issue 7521

2019-06-02: Don't set the profile list view's headerView. It
comes with a better one by default. This fixes a bug where
there was a black line in the top right corner of profile
list views with headers

2019-06-02: Force the process cache to update synchronously
before checking whether a tab has running processes.

2019-06-02: Avoid invoking titleBarAccessoryViewControllers
for non-titled windows, as that triggers an assertion.

2019-06-01: Add job with arguments as title component. Issue
7289

2019-06-01: Use suggesters for profile name text fields

2019-06-01: Add commandLine variable in session scope that
includes arguments

2019-06-01: Reduce
iTermWebSocketConnectionMinimumPythonLibraryVersion to avoid
needlessly breaking existing full-environment scripts

2019-06-01: Bump min python environment version to 50 to
mitigate the error reporting issue

2019-06-01: Bump python module version to 0.69.  Catch
status code 406, which we use to mean the python lib is too
old. Print a nice error.

2019-06-01: Add Session.async_set_profile(). Issue 7782

- Add Profile.local_write_only_copy - Add
Session.async_set_profile - Make iTerm2 report its version
to the websocket client - Add a capabilities check so the
python library can be backward-compatible with older
versions of iTerm2 by using deprecated APIs for them.  - Add
the ability to set multiple profile properties at once from
Python. Deprecate the one-at-a-time API.  - If you try to
set session-specific profile values that are effectively
equal to a shared profile, just switch to the shared
profile. If they include a GUID matching a shared profile,
switch to it and then divorce and modify.  - Bump the min
library version to 0.69 - Improve validation of API requests
to set profile properties.  - Expose the set of
non-deprecated keys from iTermProfilePreferences.  - Remove
default profile values for deprecated keys

2019-06-01: Center the prefs panel the first time it's used

2019-05-31: Fix wrong durations in paste tests since the
default changed

2019-05-31: Add a knob to the clock statusbar component to
make it localize (i.e., use the format as a template). Issue
7849

2019-05-31: When changing input broadcasting mode in a
traditional fullscreen window and the menu bar is hidden in
fullscreen, don't leave the menu bar visible. Looks like
this case never got tested properly. Issue 7850

2019-05-30: Add the shortcut accessor vc to the title bar
when changing theme. Issue 7846

2019-05-30: Fix some bugs that came up in testing tmux
3.0-rc. Put quotes around %1 style window pane numbers.
Ignore -rc in tmux version number

2019-05-30: Reduce default fast paste speed from 100k/sec to
76k/sec. See issue 5181

2019-05-30: On macOS 10.14, don't draw a window border
unless the window is transparent. Issue 7846

2019-05-29: Merge branch 'master' of
github.com:gnachman/iTerm2

2019-05-29: If you send CurrentDir but not RemoteHost,
accept it as an old PWD when creating a new session. Issue
5878.

2019-05-29: iterm2_git_poll.sh tweaks (#385)

* use `/usr/bin/env sh` for the shebang to allow a user's
environment to dictate which `sh` is run * use locals to
avoid leaking environment * use lowercase for locals *
convert ~ in the received directory path to the user's HOME
directory * use the more portable and clearer `test`
conditional by using `[ ... ]` notation instead of the
arithmetic expression `(( ... ))` * use `command` to locate
the `git` binary 2019-05-29: Add a one-second delay before
auto-restarting a session

2019-05-29: Introduce a delay before restarting a session
automatically

2019-05-28: Uuse the same status-indicating text field cell
for prefs folder as for session log folder

2019-05-28: Tweak division view color for Mojave

2019-05-28: Fix a bug where transparent no-titlebar windows
in regular theme would keep the tabbar backing after hiding
the tabbar. The purpose of keeping the tabbar backing
visible is so there's something behind a fake titlebar. I
repro'ed this using the hotkey window in the settings from
issue 6875.

2019-05-28: Update warning icons

2019-05-28: Add 'restart' action to session on-end profile
preference. Change it into a popup so there can be three
values. Issue 5632

2019-05-28: Hide profile command when Login Shell is
selected

2019-05-28: Fix discrepancy between GPU and legacy renderers
for drawing marks.

2019-05-27: Fix some failing tests

2019-05-27: Raise an exception when
async_set_broadcast_domains fails

2019-05-26: Fix failing tests. Looks like the tests were
wrong all along :(

2019-05-26: Respect system prefs>dock>prefer tabs when
opening documents. This change is as small as possible,
affecting only windows opened with the menu and by URL.

The issue was raised here:
https://gitlab.com/gnachman/iterm2/commit/f75987b19ec8624ca94cfa3ca31f962da9294daa#note_173974089

2019-05-26: Tolerate empty iTermURLMark object. It is added
on the line after a URL, which may be empty, but we don't
want to lose it.

2019-05-26: Don't reserve space for overflow button if none
is visible. This will affect only 10.13 since 10.14 always
has an add tab button. Issue 7811

2019-05-26: Add gnachman.xcusersdatad to gitignore for
better font picker

2019-05-26: Remove gnachman.xcuserdatad

2019-05-26: [BFP] Set more reasonable clamping boundaries
for spacing size pickers and prevent them from wrapping
around. Do not notify delegate of bogus values, which might
be only transient while editing.

2019-05-26: Don't change window size when switching profiles
with APS. If an APS profile matches as soon as a new tab is
created the window will shrink each time you create a new
tab.

2019-05-26: Fix a bug in handling APS rules with host of *.
I was checking the actual host, not the rule, for equality
to *.

2019-05-26: Enable the add-tab button on macOS 10.14

2019-05-26: Tab inset is always 0 pre-Mojave. Issue 7811.

2019-05-26: Add support for spacing combining marks.

A spacing combining mark is a character that combines
(somehow) with a preceding base character. For example,
TAMIL VOWEL SIGN E. They might combine in funny ways, like
to the left of the base character. This commit does more or
less what Terminal does, which is to give such a character
its own cell but draw it in conjunction with the preceding
character, provided the predecessor is drawable non-ascii.
It is guarded by the advanced pref 'Detect base unicode
characters with lookup table' which is a bit of a misnomer.
I am not courageous enough to turn this on for 3.3, but
perhaps a later dot release can have it by default.

2019-05-25: Rename change default profile py to rst

2019-05-25: Add test for APS accepting rule of *

2019-05-25: Add change_default_profile example

2019-05-25: Change how APS handles host name of '*'. Before,
it would treat it as though there were no host rule at all.
That worked well enough when some other component was
provided, so *:/foo was equivalent to /foo. But it failed
because a profile with a rule of * ought to outrank a
profile with no rules at all.

2019-05-25: Force triggers to evaluate and reset the
triggerLine before switching profiles. Issue 7832

2019-05-22: Add an option for aggressive base character
detection for issue 7788.

2019-05-22: Fix some race conditions and bugs in terminating
task runners. reset was called before terminate, which
prevents terminate from doing anything. It was also possible
to kill a task before it was launched, which means you think
it's dead but it never dies.

2019-05-22: Reset _numTouches aggressively since someone was
able to get it stuck. Issue 7819

2019-05-22: Update tabtitle to fix bugs.

2019-05-22: Keep a reference to terminating command runners
until the exit. Trying to fix a bug where some hang around
but we lack pointers to them.

2019-05-21: Use templates for the clock component's date

2019-05-21: Fix a regression on 10.14 for background images
with per-pane status bar on the bottom.

2019-05-21: Only premultiply by alpha for background color
(as it blends over a background image) in GPU renderer for
macos 10.14. On 10.13, blending is done differently and does
not need to be premultiplied.

2019-05-20: Status bar should overlap background image when
using GPU renderer, same as when not, even for per-pane
status bars. I noticed this on macOS 10.13.

2019-05-20: Fix issue 7737 - white borders around non-native
fullscreen in macos 10.13 with gpu renderer

2019-05-20: Fix a bug where PTYSplitView didn't redraw its
divider properly after doing Window > Arrange split panes
evenly

2019-05-20: Bring back GrowlTrigger to fix broken
notification triggers

2019-05-19: Fix failing test

2019-05-19: [python] Bump version

2019-05-19: Fix copy to control

2019-05-19: Copy experiment to control when building beta

2019-05-19: Modernize it2api's use of run_until_complete

2019-05-19: Add support for modal alerts attached to
windows.

For method calls, pass receiver in protobuf rather than
taking the "id" argument.

Built-in functions can now declare optional-valued
arguments.

Add tabtitle example.

This commit breaks backward compatibility with older python
library alert.py's.

2019-05-19: Add TextInputAlert

Prevent duplicate window GUIDs when restoring a session.
This confuses the heck out of app.py.

Fix a bug where NSNull's would get saved to user defaults
when saving an arrangement with a window title stack
containing NSNulls.

2019-05-18: Add set title methods to tab and window

2019-05-18: Add better type checking for methods

2019-05-18: Fix warnings in tests

2019-05-18: Add support for method invocations from scripts.

The purpose is to make it easier to add new scripting
functionality without adding new protobuf interfaces. A
method call is just like a function call except:

1) It is marked as a method call in the RPC request 2) It
must contain an "id" argument 3) The value of the "id"
argument is a globally unique identifier for the receiver

This commit adds support for a class creating a variables
frame to mark one of its variables as a "primary key".
Primary keys are added to the global index, and can be
targeted by method calls.

Varible references have been generalized not to depend on
scopes, so that a variable may hold a reference to its own
primary key.

A class may support methods by: 1) Conforming to
iTermObject, which is necessary to be the "owner" of an
iTermVariables object.  2) Returning built-in functions from
-objectMethodRegistry.

Those built-in functions should be named as
fooWithCompletion: followed by zero or more other arguments.
Reflection is used to type check inputs, although it's
unfortunately ineffective as it only recognizes NSObject.
Better type checking is still needed.

2019-05-16: Cap the number of task runners that the git
status bar component can create to avoid runaway creation
which I have personally experienced but don't have an
explanation for yet

2019-05-16: Prevent building process cache from blocking the
main queue. While the work was done on another queue, it
held a lock for a long time and processInfoForPid would
block. Now there are two queues. lockQueue is only locked
for a very short time to access data produced in the work
queue. The work queue can take its time doing computation
and then do a quick write on the lock queue

2019-05-15: Fix warning

2019-05-15: When tabs get small, make labels take priority
over icons and add an advanced setting to control how small
labels can become before the icon is removed. Issue 7815

2019-05-15: Fix vertical alignment of strikethrough line

2019-05-15: Add support for strikethrough (SGR 9)

Issue 5130

(Forgot to git add my changes to the previous commit)

2019-05-15: Add support for strikethrough (SGR 9)

Issue 5130

2019-05-14: Add support for variable-size tmux integration
windows.

Requires tmux 2.9 and an advanced pref. This turns out not
to require any changes in tmux!

Also fixes a bug when changing font size in a maximized tmux
tab which caused the window to change size to be the size of
an unmaximized pane.

2019-05-13: Work around macOS numeric keypad equals key bug.
Issue 7780.

2019-05-13: oops, forgot to git add this image

2019-05-12: Fix failing
iTermProcessCollectionTest.testCycle. I think this only ever
passed because of an uninitialized value :O

2019-05-12: Show power plug instead of battery in status bar
for machines without batteries

2019-05-12: Update travis goldens for macos 10.14, xcode
10.2

2019-05-12: Fix a bug where a CPSLRParser would have a
dangling delegate pointer when it got reused. The fix is to
cache many of them and nil the pointers out when they are
explicilty released back into the cache

Also fix a failing test due to the new
sharedInstanceIfEnabled on iTermAPIHelper.

2019-05-12: [python] bump version

2019-05-12: Don't use I flag in dropbox uploader. Whatever
sed Travis has doesn't like it

2019-05-12: Report self as VT100 in DA when TERM=VT100.
Issue 7803

2019-05-12: Treat undefined variable refs in interpolated
strings as empty string.

Also: - Remove unneeded optional: arg from parsed
expression's string initializer.  - Clean up errors in API
helper - Add +[iTermAPIHelper sharedInstanceIfEnabled]. This
was necessary because invoking a function that was not a
builtin function would prompt you to enable the Python API,
but the function is sure to be undefined and it could be a
misspelling of a built-in function. So just treat that as an
undefined function error without prompting to enable the
API.

2019-05-12: Add placeholders to expressions so you can get
the AST.

2019-05-12: Revert "Migrate non-optional variable references
in badges when upgrading from <3.3 to >= 3.3. Issue 7795"

This reverts commit
905f0beba8442a71fce9b7c7deaf993d1adacf3c.

2019-05-12: Save (at launch) and restore (before execing a
child) resource limits. Issue 7808

2019-05-11: Never change Restart to Start in script console

2019-05-11: Disable hyphens in `code` in python api docs.
Issue 7805.

2019-05-11: Offer to install .its files in scripts folder.
Issue 7805

2019-05-11: Migrate non-optional variable references in
badges when upgrading from <3.3 to >= 3.3. Issue 7795

2019-05-10: Improve docs on installing GTA

2019-05-10: Parse tmux versions beginning with 'next-'

2019-05-10: Fix two gnarly bugs:

1. The expressions for script function calls which held the
completion block could get dealloced before getting called.
This could cause them not to be run at all. For example, a
title provider that has a reference to
tab.window.currentTab.currentSession.id has enough dangling
references that are resolved late that the completion block
is released before the script backing it responds. See the
mailing list thread with subject line "How to reevaluate
hook on window resize", may 10 2019 8:58 am

2. The session name controller did not rebuild refs when a
title provider was loaded after restoring a window with
references to the not-yet-loaded title provider. This caused
it to be called exactly once.

This adds some extra debugging facilities. Now when you
click on a variable in the inspector it logs its outstanding
references to the console.

2019-05-10: Force PTYSplitView to redraw itself after a
subview is added or removed. Remember that no matter what
problems you may have in your life, at least you're not
responsible for maintaining NSSplitView. Issue 7798

2019-05-10: Reduce floating hotkey window level to normal
when any other window is key. Issue 6911

2019-05-10: Never show a zero. Also, don't perform an
inequality comparison between a pointer and 0

2019-05-10: Hide battery time when the charging state is out
of sync with the last sample. This means it'll take up to a
minute to show the time, which I suppose I should fix
eventually

2019-05-10: Add status bar layout to keys to bulk copy.
Issue 7793

2019-05-10: Add knobs to battery component to show estimated
time left and percentage. Fix time-left code in power
manager

2019-05-10: Polish the sparklines components. Make the
current value available immediately. Store history in the
publisher so new status bars get the history immediately.

2019-05-10: When the current tab is removed select the one
to the right, as the built-in tab bar control does. Issue
7792

2019-05-10: Add a workaround for the OS not reporting the
numeric keypad flag. It's off by default until I can test it
further or get follow up on issue 7780

2019-05-09: Add a user scope per window and add an API to
set values in it to Python

2019-05-09: Report errors when you try and fail to set a
variable using the API. Add a global user scope

2019-05-09: Work around a bug in tmux 2.9 and 2.9a wherein
the status bar height is subtracted from the window size in
control mode

2019-05-09: Fix async_update_layout to work with tmux
windows

2019-05-07: Draw chart baselines with 50% alpha

2019-05-07: Fix memory issues in power manager

2019-05-07: Add advanced pref to disable double-clicking a
tab to edit its title. Issue 7777

2019-05-07: Add cmd-left and cmd-right to natural text
editing. Issue 7778

2019-05-07: [status bar] Add battery meter. Issue 7776

2019-05-07: Improve debug logging around host/username
change and announcemnets

2019-05-07: Show the tab's label, not the current session's
name, in the tabview tooltip. Issue 7621 comment on may 7

2019-05-07: Add ability to enable/disable Asyncio debug mode
(#384)

* Add ability to enable/disable asyncio debug mode.

- Defaults to disabled when `run_until_complete()` and
`run_forever()`

- Fixes https://gitlab.com/gnachman/iterm2/issues/7785

Signed-off-by: Ricky Grassmuck <rigrassm@gmail.com>

2019-05-06: [python] Expose Session.preferred_size by maknig
it a property with a docstring

2019-05-06: Allow interpolated strings in tmux window names.
Properly escape and unescape window names. Issue 7621

2019-05-06: Make the message about undefined variables more
explicit about how to fix it

2019-05-05: Respect system preference for double-click on
titlebar. Issue 7779

2019-05-05: Fix bug where the edit tab title textfield
delegate was released because it's now a nonmodal window

2019-05-05: Improve error handling for interpolated strings.
Fixes status bar component, tab, and window title error
reporting to show the error. Issue 7621

2019-05-05: Merge branch 'master' of
github.com:gnachman/iTerm2

2019-05-05: Don't assert when setting a variable with an
empty name since this can be done from userland. Issue 7772

2019-05-02: Add transparent internet access policy. TODO:
Test this.

2019-05-02: Reveal script console when you click on a
failure notification

2019-05-02: Improvements to actions and invocation status
bar components. Ensure colors are kept up to date. Make
invocation component button look like action button. Add
function call suggester to its text field.

2019-05-02: Move secure keyboard entry logic into its own
class. Allow it enabled while focus is stolen. Issue 7761

2019-05-01: Make travis use xcode 10.2 so it can deal with
swift silliness

2019-05-01: Fix box drawing broken by daa6fb4a1

2019-05-01: Add regression test for issue 7760.

2019-05-01: Improve performance of opening the list of color
presets when you have a lot of them. User defaults is slow!

2019-05-01: Fix crash in open quickly when there's a
defective color preset. Issue 7764
