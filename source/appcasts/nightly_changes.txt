2019-04-02: When checking if a session should prompt to
quit, always skip the process for _shell.pid. If its name is
'login', skip an extra level (the shell). Issue 7661

2019-04-02: macOS gets confused when toggling nonnative
fullscreen and thinks all the windows were closed. Ensure we
don't quit automatically in this case. Issue 7668

2019-04-02: Remember the order of sessions when they're
maximized. Issue 7665

2019-04-02: Simplify taking an image of a tab; do not try to
fill in the tabbar area, which never looked good or worked
right. Make tab dragging look better. Issue 7632

2019-04-02: When dragging a tab into its own window is
disabled don't show the preview window. Issue 7632

2019-04-01: Scroll prefs search row to visible when moving
up/down with arrow keys. Fix drawing scrim on Mojave

2019-04-01: Fix prefs search for macos 10.13

2019-04-01: Reduce height of minimal tabbar to 38 points.
Issue 4080 (comments dated around 4/1)

2019-03-31: Add link to Python API home from all Python docs

2019-03-31: Add links to troubleshooting tutorial

2019-03-31: Add troubleshooting section to the tutorial

2019-03-31: Don't try to enable event tap when secure input
is disabled if the process is not trusted because then you
get a prompt every time the app is deactivated while secure
keyboard entry is on. Issue 3316 in a comment

2019-03-31: Fix 10.13 users who got stuck on compact windows

2019-03-31: Always enable autorainbow

2019-03-31: Hide tabbar in fullscreen on 10.14 when there's
one tab and the tabbar is normally hidden when there is one
tab. Issue 7622

2019-03-31: When not stretching tabs, don't draw the color
tabs selection indicator past the bounds of the last tab.
Also, when not treating the left inset as part of the first
tab, draw an outline before the tab when there is only one
tab (and they're on top). Issue 7638

2019-03-31: Fix semantic history support for
filename:linenumber:text. Issue 7635

2019-03-30: Fix how changing the paragraph style of tabbar
attribute strings works to preserve the color when there is
an icon. This caused titles to become black when truncated.
Issue 7646

2019-03-30: When preserve window size when tab bar
visibility changes, we did not allow the initial
fitWindowToTabs to be called, which is what causes the
window to respect its rows/columns setting. This commit
remembers that we need that and allows it to be called once
from tabViewDidChangeNumberOfTabViewItems. Issue 7647

2019-03-30: Use 25% alpha label color for status bar
separators by default. Do not initialize them to 25% black
because that's no good in dark mode. Issue 7648

2019-03-30: Enable a bunch of experiments that have been
around for a long time

2019-03-30: Do not consider 'login' as a child that can
block closing a window. I think the algorithm for finding
children changed which caused login to be considered. Issue
7650.

2019-03-30: Fix searching advanced prefs. Downrank it so
it's always last

2019-03-30: If the current git branch does not exist on the
server then git rev-list --left-right --count HEAD...@'{u}'
will return an error. Allow git push origin <branch> to be
selected in this case

2019-03-30: Add search to prefs

2019-03-28: Improve error reporting for rejected API
requests

2019-03-28: Improve docs for registration. Fix source for
George's Title Provider to match the .its file (the register
call was wrong)

2019-03-27: Remove the try it now link for minimal/compact
pre 10.14

2019-03-27: Fix a bunch of bugs, bad writing, broken links,
etc in api docs. Replace tutorial .its files with working
ones.

2019-03-27: Fix the background color of the end inset of the
minimal tab bar when tabs don't stretch, or when a tab in
the overflow button is selected. Also, fix the calculation
for the max number of tabs in a left-side tabbar which had a
wrong hardcoded constant

2019-03-26: Draw outline above first tab when not treating
start inset as part of first tab in minimal tabbar

2019-03-26: Use non-selected color for minimal tabbar end
inset unless an overflow tab is selected. Issue 7572

2019-03-26: Hide the tabbar backing in nonnative full
screen, minimal, top tabs. Issue 7624

2019-03-26: Retina round status bar setup views. Issue 7625

2019-03-26: Grid align status bar components

2019-03-26: Add debug logging for promptOnCloseReason

2019-03-26: Use performWindowDragWithEvent: instead of using
my own tracking loop so that drags that go to the edge of
the display will move to the next space. Issue 7628

2019-03-26: Put a visual effect view behind the status bar
on Mojave when not in Minimal mode, because otherwise it is
transparent. Issue 7631

2019-03-26: Fix custom window title profile setting. It
lacked a delegate. Issue 7621, in a comment

2019-03-26: Add -[PTYSession setName:], which is needed by
applescript 'tell session to set name to x'. A comment in
issue 7621

2019-03-26: Bump project to xcode 10.2

2019-03-26: Reword download/upload finished/failed notif so
the status is visible when the filename is long

2019-03-25: Change default title components to session name.
Change migration path for users with profile name turned off
to use session name so that OSC 0/1/2 still work for them.

2019-03-25: Fix legacy renderer background image for all
modes other than scale aspect fit

2019-03-25: Draw background under bottom per-pane status
bars since not all panes might have them.

2019-03-25: Fix the main difference between legacy and GPU
background image drawing when spanning panes. The legacy
renderer would draw images under the titlebar and status
bar, while the GPU renderer inset them so you could see the
whole thing. This commit changes the legacy renderer to act
like the GPU renderer, so no part of the image is hidden
under the decorations. I have verified that they exactly
match for all modes with and without per-pane backgrounds.

2019-03-25: Change tap to click

2019-03-24: Fix a bug that caused texture thrashing when
there were more than 4k glyphs. The limit was supposed to be
(and now is) 64k. Issue 7610.

2019-03-24: Don't start the flags-changed event tap when
stopping the event tap when it's never been started. Issue
7605

2019-03-24: Point-align status bar components horizontally

2019-03-24: Include icon width and margins into account for
stable layout algorithm

2019-03-24: Add an advanced pref to treat the area left of
the minimal tabbar as part of the first tab. Issue 7614

2019-03-24: Overhaul drawing the outline in the minimal tab
bar and determining the background color for the tabbar and
statusbar in minimal

2019-03-24: Make tab overflow button visible in minimal
theme with dark background by changing its appearance to
dark when needed

2019-03-24: unhide standard window buttons when becoming
non-compact. Issue 7615

2019-03-24: Treat trigger setting hostname or pwd as shell
integration so that it will be sticky now that there's a pwd
poller

2019-03-24: Bump min version in .summary file to 10.12

2019-03-24: Use an autorelease pool in iTermCommandRunner to
avoid holding on to objects for a long time, just in case

2019-03-24: Drain the task notifier's autorelease pool
before calling select. Fixes a bug where when you close all
sessions the last one doesn't get released because of a
lingering reference since select won't return until there's
something to do

2019-03-24: Tweak vertical position of network status bar
icon

2019-03-24: Fix instacrash when adding fixed spacer to
status bar because the resulting plist had a number in the
dictionary key

2019-03-23: Bump min version of ws

2019-03-23: Soften the warning about Python API stability

2019-03-23: Clear the selection before redrawing the screen
after resizing the session. The call to screenNeedsRedraw
causes PTYTextView.refresh to be called, which moves the
selection if there are overflow lines. When the session's
width has decreased, that causes an exception in
-[iTermTextExtractor
enumerateCharsInRange:charBlock:eolBlock:] because the range
of the selection exceeds the width of the session. The fix
is to clear the selection first since it gets re-added right
after redrawing.

2019-03-23: Bump min python version to 44

2019-03-23: Restore git push

2019-03-23: Fix up various python docs issues

2019-03-23: 3.3.0beta1

2019-03-22: Add status bar icon for actions

2019-03-22: Make action status bar components have
interpolated string titles

2019-03-22: Add icon for status bar actions

2019-03-22: Add action status bar component

2019-03-21: Add actions tool

2019-03-21: Detect when git is broken because xcode doesn't
know where it is because macOS is  for developers

2019-03-21: Disable force quit button in jobs status bar
component popover initially

2019-03-21: Don't treat mouseDown as a click in the status
bar

2019-03-21: Add rate limited idle updates, which only update
after a period of not trying to update. Use this for the
touchbar man page button to make it less annoying.

2019-03-21: Disable changing terminal type or setting locale
variables from edit current session

2019-03-20: Add advanced pref to set dynamic profiles
folder. Issue 6194

2019-03-20: Disable GPU renderer on 10.12 by default because
it is slow. Issue 7591

2019-03-19: Add links to onboarding screen to demo the
features

2019-03-18: Fix logic for hiding tabbar backing and leaving
an empty space. Fixes a bug where moving the tabbar to the
bottom in a compact window, automatic theme, left the
backing visible. Also fixes a bug where bottom tabbars had
an empty space at the top in fullscreen.

2019-03-18: Invalidate session status bar when refreshing
terminal. Fixes a bug where toggling per-pane status bars
didn't cause the status bar to appear in the per-pane title
bar

2019-03-18: Double-click in fake titlebar zooms

2019-03-18: Show proper colors in status bar prefs

2019-03-17: Remove release in arcified code

2019-03-17: Add inih

2019-03-17: [python] Update .its files for new archive
format that uses setup.cfg instead of setup.py

2019-03-17: [api] Expose a minimum environment version in
setup.cfg. Download a newer runtime if needed when importing
or running a script

2019-03-17: Add license for inih

2019-03-17: [python] Use setup.cfg instead of setup.py
because it's easier to parse and it will allow me to attach
the minimum environment version

2019-03-16: Fix failing tests

2019-03-16: Add an inner tabview to pointer prefs

2019-03-16: Reorder tabs in Prefs > Keys

2019-03-16: Report mouse events on first mouse when
alwaysAcceptFirstMouse is on. Issue 7599

2019-03-16: Fix some bugs in calling emacsclient. Do not
repeat args to -a. Pass -n to allow emacsclient to run in
the background.

2019-03-16: Fix bugs: automatic theme + compact (or other
kind of fullsize content view) window woud leave the tabbar
backing visible after hiding the tabbar. Also, on entering
fullscreen an empty area would be left at the top

2019-03-16: bump version

2019-03-14: Launch emacs using emacsclient. Issue 7594

2019-03-12: Remove NSLog

2019-03-12: Use the standard mechanism for Find By
Selection. Hook terminal windows and the notes tool up to
it.

2019-03-12: Fix find by selection

2019-03-12: Replace libsixel.a with a slimmed down version
that doesn't include any of: output.c output.h fromsixel.c
tosixel.c quant.c quant.h dither.c dither.h frame.c frame.h
pixelformat.c pixelformat.h scale.c chunk.c chunk.h loader.c
loader.h frompnm.c frompnm.h fromgif.c fromgif.h encoder.c
encoder.h decoder.c decoder.h stb_image.h writer.c writer.h
stb_image_write.c stb_image_write.h status.c status.h
malloc_stub.c malloc_stub.h allocator.c allocator.h tty.c
tty.h

2019-03-12: [statusbar] Remove outstanding blocks from the
gitPollWorker when resetting it. Fixes a bug where the git
component gets stuck after a timeout.

2019-03-11: Add support for sixel images using libsixel.

Regarding libsixel:

Built at commit 2df64373e58c4f48fbb72032a66473e71fc2a6ce.
Here's how I built it:

setenv MACOSX_DEPLOYMENT_TARGET 10.12 make clean &&
./configure --without-libcurl --without-jpeg --without-png
--prefix=`pwd`/libsixel && make && make install

Then delete everything except the include and the .a library
and copy it over.

2019-03-09: Add support for switching jobs to automatic
profile switching.

2019-03-09: Show a placeholder component in an empty status
bar to avoid confusion seen in issue 7581

2019-03-09: Refactor tabbar insets code to make it sensible

2019-03-09: Don't draw an outline around the select tab in
minimal theme.

2019-03-09: Add a tabbar inset for compact windows. The
previous commit was too aggressive.

2019-03-09: Break prefs>keys up into nested tabs

2019-03-09: Fix left margin of tabbar on 10.13

2019-03-09: Fix some clipped views

2019-03-09: Fix warnings and failing tests

2019-03-09: Tweak bottom margin in prefs to be equal to the
top margin.

2019-03-09: Restore code that draws that top margin that was
somehow lost

2019-03-09: Add a UI in prefs to view and remove API access
settings for individual apps.

2019-03-09: Override the default frame saving mechanism used
by NSWindow for preference panel because the window changes
size and wants to preserve its top-left coordinate. The
default mechanism preserves the bottom-left coordinate. This
causes the window to eventually march to the bottom of the
screen. Also, for some stupid reason panels insist on
opening only on the main screen. I don't see a sane way of
overriding that behavior and the new behavior is more or
less consistent with what was done before.

2019-03-09: Remove special case for REPL authentication. I
can't find a way to make it secure enough to feel
comfortable

2019-03-08: [api] Improve authentication. Key auth on
filesystem, inode, and hash of executable. Check that REPLs
have the proper parentage and are registered as REPLs

2019-03-07: Set text color of script console calls textview
which for some reason uses black rather than textColor

2019-03-07: [python] Update darknight and theme archives

2019-03-07: [python, api] Fix bugs, add tests.

Run mypy and fix problems it found.

- Add and fix various tests in it2api and test_it2api.sh -
Handle None in various places - Fix improper override of
async_get in PartialProfile. Renamed that method to
async_query. async_get will return a full profile. Updated
it2api to use it.  - Update darknight and theme examples for
new APIs.  - Add grid_size to Session - Cancel tasks when
Connection.async_main returns to avoid warnings that happen
sometimes. I was able to reproduce the warning by creating a
window whose session immediately exited. The error was that
a task was still pending.  - Move constants in
FocusUpdateWindowChanged to an Enum.  - Remove some debug
print statemsn in focus.py - Fix a typo in
Profile.set_cursor_color that broke it - Fix screen streamer
when requesting screen contents.  - Fix
WindowedCoordRange.right - Fix fetching screen contents,
which always returned nothing because PTYSession computed
the range improperly.

2019-03-06: Put the profile's command text field in single
line mode. Let's see what breaks. Issue 7562

2019-03-06: Warn when editing a dynamic profile through the
UI. Issue 7577

2019-03-06: Add debug logging for images and interval tree
add/remove. Issue 7576

2019-03-05: Do not save to pasteboard history when secure
input is enabled

2019-03-05: Fix a bug where mini search fields would have a
light appearance when using the dark tab style. Issue 6957

2019-03-05: Swap background colors of active/inactive tabs
in dark high contrast. It's clearer which is selected now.
Might be a Mojave-ism. Issue 7563

2019-03-05: Add missing include

2019-03-05: When a session becomes key and the find view is
visible and the contents of the search pasteboard have
changed, perform a search. Issue 7559

2019-03-03: Fix a typo

2019-03-03: [python] Reformat examples page

2019-03-03: Assert that the python API alert can't show
twice concurrently

2019-03-03: [python] bump version

2019-03-03: Add some pragma marks

2019-03-03: Add tips of the day for version 3.3

2019-03-03: Reduce the level of comment snark

2019-03-03: Fix color of labels in highlight trigger
parameter

2019-03-03: Fix broken links to copycolor and settabcolor
examples

2019-03-03: [python] Add tile example

2019-03-03: Add a top level function async_get_variable to
get global variables.

2019-03-03: Add links to settabcolor from docs

2019-03-03: [python] Add settabcolor example

2019-03-03: Add a note to the tutorial explaining how to
launch the app with pyobjc

2019-03-03: Reject control sequence-set badge formats that
include function calls

2019-03-03: Put a zero-width space between backslash and
open paren in control sequence-set window and icon titles to
avoid their getting evaluated as interpolated strings for
security purposes

2019-03-03: When a session provider is unavailable use an
ellipsis title

2019-03-03: [api] Fix calling script functions with optional
parameters, which I broke yesterday

2019-03-02: [python] Fix a bug in the
iterm2.NewSessionMonitor where it unsubscribed incorrectly.
Add copycolor example

2019-03-02: Fix failing tests. Fix a bunch of bugs they
found: array literals were arrays of expressions but array
values from variables are not; the solution is to break it
into two different kinds of arrays. Make
iTermExpressionEvaluator return nil rather than NSNull for
its value. Furthermore, do the right thing if you call
iTermExpressionEvaluator.value when the value is nil (rather
than try to evaluate it again). Also, assert that you don't
try to get the value during evaluation.

2019-03-02: [python] Bump version

2019-03-02: [python] Add oneshot example

2019-03-02: Many improvements to expression parsing and
evaluation.

The code was originally written only with function calls in
mind and then expressions and interpolated strings got added
on and it turned into a bit of a mess. This commit cleanly
separates parsing from evaluation. It also fixes a bunch of
bugs with namepsaced functions and array literals. The
suggesters work a lot better now.

- [python] add Alert class - When parsing expressions all
strings are swifty strings.  - Suggest built-in non-private
functions.  - Support string literals in suggesters.  - Use
iTermParsedExpression consistently instead of mixing
literals and parsed expressions in the output of parsers.  -
Remove the evaluateSwiftyStrings advanced pref because it
only controlled whether the session's autoNameFormat was
evaluated before being assigned. Double-evaluating a swifty
string is madness. The advanced pref was added before
session names were made into swifty strings. Happily it was
off by default.  - Simplify the interface of
iTermScriptFunctionCall to remove all the extraneous cruft
that didn't belong.

2019-03-02: Add an alert built in function

2019-03-02: [python] Change iterm2.async_invoke_function to
take a connection as its first argument

2019-03-02: Make copy_api a little more verbose and less
error prone

2019-03-02: [api] Fix a bug where you couldn't explicitly
call a script-registered function that takes defaults
because it searched by the signature of the function with
only the provided arguments.

2019-03-01: Do not ask to download the python runtime when
autolaunching a script when the API is off.

2019-03-01: Get the process group id before killing the
process group. Fixes a bug where the REPL didn't get killed
properly

2019-03-01: Add pref to enable/disable API server. When
disabling, close all sockets, erase all subscriptions, and
kill all process groups. This has the added bonus of fixing
the Terminate button in the console to kill the process
group rather than the process since that would leave other
processes around (including the python script). Do not offer
to silence the prompt when the enable API alert is shown in
response to a user action like launching a script from the
menu.
