2019-03-27: Remove the try it now link for minimal/compact
pre 10.14

2019-03-27: Fix a bunch of bugs, bad writing, broken links,
etc in api docs. Replace tutorial .its files with working
ones.

2019-03-27: Fix the background color of the end inset of the
minimal tab bar when tabs don't stretch, or when a tab in
the overflow button is selected. Also, fix the calculation
for the max number of tabs in a left-side tabbar which had a
wrong hardcoded constant

2019-03-26: Draw outline above first tab when not treating
start inset as part of first tab in minimal tabbar

2019-03-26: Use non-selected color for minimal tabbar end
inset unless an overflow tab is selected. Issue 7572

2019-03-26: Hide the tabbar backing in nonnative full
screen, minimal, top tabs. Issue 7624

2019-03-26: Retina round status bar setup views. Issue 7625

2019-03-26: Grid align status bar components

2019-03-26: Add debug logging for promptOnCloseReason

2019-03-26: Use performWindowDragWithEvent: instead of using
my own tracking loop so that drags that go to the edge of
the display will move to the next space. Issue 7628

2019-03-26: Put a visual effect view behind the status bar
on Mojave when not in Minimal mode, because otherwise it is
transparent. Issue 7631

2019-03-26: Fix custom window title profile setting. It
lacked a delegate. Issue 7621, in a comment

2019-03-26: Add -[PTYSession setName:], which is needed by
applescript 'tell session to set name to x'. A comment in
issue 7621

2019-03-26: Bump project to xcode 10.2

2019-03-26: Reword download/upload finished/failed notif so
the status is visible when the filename is long

2019-03-25: Change default title components to session name.
Change migration path for users with profile name turned off
to use session name so that OSC 0/1/2 still work for them.

2019-03-25: Fix legacy renderer background image for all
modes other than scale aspect fit

2019-03-25: Draw background under bottom per-pane status
bars since not all panes might have them.

2019-03-25: Fix the main difference between legacy and GPU
background image drawing when spanning panes. The legacy
renderer would draw images under the titlebar and status
bar, while the GPU renderer inset them so you could see the
whole thing. This commit changes the legacy renderer to act
like the GPU renderer, so no part of the image is hidden
under the decorations. I have verified that they exactly
match for all modes with and without per-pane backgrounds.

2019-03-25: Change tap to click

2019-03-24: Fix a bug that caused texture thrashing when
there were more than 4k glyphs. The limit was supposed to be
(and now is) 64k. Issue 7610.

2019-03-24: Don't start the flags-changed event tap when
stopping the event tap when it's never been started. Issue
7605

2019-03-24: Point-align status bar components horizontally

2019-03-24: Include icon width and margins into account for
stable layout algorithm

2019-03-24: Add an advanced pref to treat the area left of
the minimal tabbar as part of the first tab. Issue 7614

2019-03-24: Overhaul drawing the outline in the minimal tab
bar and determining the background color for the tabbar and
statusbar in minimal

2019-03-24: Make tab overflow button visible in minimal
theme with dark background by changing its appearance to
dark when needed

2019-03-24: unhide standard window buttons when becoming
non-compact. Issue 7615

2019-03-24: Treat trigger setting hostname or pwd as shell
integration so that it will be sticky now that there's a pwd
poller

2019-03-24: Bump min version in .summary file to 10.12

2019-03-24: Use an autorelease pool in iTermCommandRunner to
avoid holding on to objects for a long time, just in case

2019-03-24: Drain the task notifier's autorelease pool
before calling select. Fixes a bug where when you close all
sessions the last one doesn't get released because of a
lingering reference since select won't return until there's
something to do

2019-03-24: Tweak vertical position of network status bar
icon

2019-03-24: Fix instacrash when adding fixed spacer to
status bar because the resulting plist had a number in the
dictionary key

2019-03-23: Bump min version of ws

2019-03-23: Soften the warning about Python API stability

2019-03-23: Clear the selection before redrawing the screen
after resizing the session. The call to screenNeedsRedraw
causes PTYTextView.refresh to be called, which moves the
selection if there are overflow lines. When the session's
width has decreased, that causes an exception in
-[iTermTextExtractor
enumerateCharsInRange:charBlock:eolBlock:] because the range
of the selection exceeds the width of the session. The fix
is to clear the selection first since it gets re-added right
after redrawing.

2019-03-23: Bump min python version to 44

2019-03-23: Restore git push

2019-03-23: Fix up various python docs issues

2019-03-23: 3.3.0beta1

2019-03-22: Add status bar icon for actions

2019-03-22: Make action status bar components have
interpolated string titles

2019-03-22: Add icon for status bar actions

2019-03-22: Add action status bar component

2019-03-21: Add actions tool

2019-03-21: Detect when git is broken because xcode doesn't
know where it is because macOS is  for developers

2019-03-21: Disable force quit button in jobs status bar
component popover initially

2019-03-21: Don't treat mouseDown as a click in the status
bar

2019-03-21: Add rate limited idle updates, which only update
after a period of not trying to update. Use this for the
touchbar man page button to make it less annoying.

2019-03-21: Disable changing terminal type or setting locale
variables from edit current session

2019-03-20: Add advanced pref to set dynamic profiles
folder. Issue 6194

2019-03-20: Disable GPU renderer on 10.12 by default because
it is slow. Issue 7591

2019-03-19: Add links to onboarding screen to demo the
features

2019-03-18: Fix logic for hiding tabbar backing and leaving
an empty space. Fixes a bug where moving the tabbar to the
bottom in a compact window, automatic theme, left the
backing visible. Also fixes a bug where bottom tabbars had
an empty space at the top in fullscreen.

2019-03-18: Invalidate session status bar when refreshing
terminal. Fixes a bug where toggling per-pane status bars
didn't cause the status bar to appear in the per-pane title
bar

2019-03-18: Double-click in fake titlebar zooms

2019-03-18: Show proper colors in status bar prefs

2019-03-17: Remove release in arcified code

2019-03-17: Add inih

2019-03-17: [python] Update .its files for new archive
format that uses setup.cfg instead of setup.py

2019-03-17: [api] Expose a minimum environment version in
setup.cfg. Download a newer runtime if needed when importing
or running a script

2019-03-17: Add license for inih

2019-03-17: [python] Use setup.cfg instead of setup.py
because it's easier to parse and it will allow me to attach
the minimum environment version

2019-03-16: Fix failing tests

2019-03-16: Add an inner tabview to pointer prefs

2019-03-16: Reorder tabs in Prefs > Keys

2019-03-16: Report mouse events on first mouse when
alwaysAcceptFirstMouse is on. Issue 7599

2019-03-16: Fix some bugs in calling emacsclient. Do not
repeat args to -a. Pass -n to allow emacsclient to run in
the background.

2019-03-16: Fix bugs: automatic theme + compact (or other
kind of fullsize content view) window woud leave the tabbar
backing visible after hiding the tabbar. Also, on entering
fullscreen an empty area would be left at the top

2019-03-16: bump version

2019-03-14: Launch emacs using emacsclient. Issue 7594

2019-03-12: Remove NSLog

2019-03-12: Use the standard mechanism for Find By
Selection. Hook terminal windows and the notes tool up to
it.

2019-03-12: Fix find by selection

2019-03-12: Replace libsixel.a with a slimmed down version
that doesn't include any of: output.c output.h fromsixel.c
tosixel.c quant.c quant.h dither.c dither.h frame.c frame.h
pixelformat.c pixelformat.h scale.c chunk.c chunk.h loader.c
loader.h frompnm.c frompnm.h fromgif.c fromgif.h encoder.c
encoder.h decoder.c decoder.h stb_image.h writer.c writer.h
stb_image_write.c stb_image_write.h status.c status.h
malloc_stub.c malloc_stub.h allocator.c allocator.h tty.c
tty.h

2019-03-12: [statusbar] Remove outstanding blocks from the
gitPollWorker when resetting it. Fixes a bug where the git
component gets stuck after a timeout.

2019-03-11: Add support for sixel images using libsixel.

Regarding libsixel:

Built at commit 2df64373e58c4f48fbb72032a66473e71fc2a6ce.
Here's how I built it:

setenv MACOSX_DEPLOYMENT_TARGET 10.12 make clean &&
./configure --without-libcurl --without-jpeg --without-png
--prefix=`pwd`/libsixel && make && make install

Then delete everything except the include and the .a library
and copy it over.

2019-03-09: Add support for switching jobs to automatic
profile switching.

2019-03-09: Show a placeholder component in an empty status
bar to avoid confusion seen in issue 7581

2019-03-09: Refactor tabbar insets code to make it sensible

2019-03-09: Don't draw an outline around the select tab in
minimal theme.

2019-03-09: Add a tabbar inset for compact windows. The
previous commit was too aggressive.

2019-03-09: Break prefs>keys up into nested tabs

2019-03-09: Fix left margin of tabbar on 10.13

2019-03-09: Fix some clipped views

2019-03-09: Fix warnings and failing tests

2019-03-09: Tweak bottom margin in prefs to be equal to the
top margin.

2019-03-09: Restore code that draws that top margin that was
somehow lost

2019-03-09: Add a UI in prefs to view and remove API access
settings for individual apps.

2019-03-09: Override the default frame saving mechanism used
by NSWindow for preference panel because the window changes
size and wants to preserve its top-left coordinate. The
default mechanism preserves the bottom-left coordinate. This
causes the window to eventually march to the bottom of the
screen. Also, for some stupid reason panels insist on
opening only on the main screen. I don't see a sane way of
overriding that behavior and the new behavior is more or
less consistent with what was done before.

2019-03-09: Remove special case for REPL authentication. I
can't find a way to make it secure enough to feel
comfortable

2019-03-08: [api] Improve authentication. Key auth on
filesystem, inode, and hash of executable. Check that REPLs
have the proper parentage and are registered as REPLs

2019-03-07: Set text color of script console calls textview
which for some reason uses black rather than textColor

2019-03-07: [python] Update darknight and theme archives

2019-03-07: [python, api] Fix bugs, add tests.

Run mypy and fix problems it found.

- Add and fix various tests in it2api and test_it2api.sh -
Handle None in various places - Fix improper override of
async_get in PartialProfile. Renamed that method to
async_query. async_get will return a full profile. Updated
it2api to use it.  - Update darknight and theme examples for
new APIs.  - Add grid_size to Session - Cancel tasks when
Connection.async_main returns to avoid warnings that happen
sometimes. I was able to reproduce the warning by creating a
window whose session immediately exited. The error was that
a task was still pending.  - Move constants in
FocusUpdateWindowChanged to an Enum.  - Remove some debug
print statemsn in focus.py - Fix a typo in
Profile.set_cursor_color that broke it - Fix screen streamer
when requesting screen contents.  - Fix
WindowedCoordRange.right - Fix fetching screen contents,
which always returned nothing because PTYSession computed
the range improperly.

2019-03-06: Put the profile's command text field in single
line mode. Let's see what breaks. Issue 7562

2019-03-06: Warn when editing a dynamic profile through the
UI. Issue 7577

2019-03-06: Add debug logging for images and interval tree
add/remove. Issue 7576

2019-03-05: Do not save to pasteboard history when secure
input is enabled

2019-03-05: Fix a bug where mini search fields would have a
light appearance when using the dark tab style. Issue 6957

2019-03-05: Swap background colors of active/inactive tabs
in dark high contrast. It's clearer which is selected now.
Might be a Mojave-ism. Issue 7563

2019-03-05: Add missing include

2019-03-05: When a session becomes key and the find view is
visible and the contents of the search pasteboard have
changed, perform a search. Issue 7559

2019-03-03: Fix a typo

2019-03-03: [python] Reformat examples page

2019-03-03: Assert that the python API alert can't show
twice concurrently

2019-03-03: [python] bump version

2019-03-03: Add some pragma marks

2019-03-03: Add tips of the day for version 3.3

2019-03-03: Reduce the level of comment snark

2019-03-03: Fix color of labels in highlight trigger
parameter

2019-03-03: Fix broken links to copycolor and settabcolor
examples

2019-03-03: [python] Add tile example

2019-03-03: Add a top level function async_get_variable to
get global variables.

2019-03-03: Add links to settabcolor from docs

2019-03-03: [python] Add settabcolor example

2019-03-03: Add a note to the tutorial explaining how to
launch the app with pyobjc

2019-03-03: Reject control sequence-set badge formats that
include function calls

2019-03-03: Put a zero-width space between backslash and
open paren in control sequence-set window and icon titles to
avoid their getting evaluated as interpolated strings for
security purposes

2019-03-03: When a session provider is unavailable use an
ellipsis title

2019-03-03: [api] Fix calling script functions with optional
parameters, which I broke yesterday

2019-03-02: [python] Fix a bug in the
iterm2.NewSessionMonitor where it unsubscribed incorrectly.
Add copycolor example

2019-03-02: Fix failing tests. Fix a bunch of bugs they
found: array literals were arrays of expressions but array
values from variables are not; the solution is to break it
into two different kinds of arrays. Make
iTermExpressionEvaluator return nil rather than NSNull for
its value. Furthermore, do the right thing if you call
iTermExpressionEvaluator.value when the value is nil (rather
than try to evaluate it again). Also, assert that you don't
try to get the value during evaluation.

2019-03-02: [python] Bump version

2019-03-02: [python] Add oneshot example

2019-03-02: Many improvements to expression parsing and
evaluation.

The code was originally written only with function calls in
mind and then expressions and interpolated strings got added
on and it turned into a bit of a mess. This commit cleanly
separates parsing from evaluation. It also fixes a bunch of
bugs with namepsaced functions and array literals. The
suggesters work a lot better now.

- [python] add Alert class - When parsing expressions all
strings are swifty strings.  - Suggest built-in non-private
functions.  - Support string literals in suggesters.  - Use
iTermParsedExpression consistently instead of mixing
literals and parsed expressions in the output of parsers.  -
Remove the evaluateSwiftyStrings advanced pref because it
only controlled whether the session's autoNameFormat was
evaluated before being assigned. Double-evaluating a swifty
string is madness. The advanced pref was added before
session names were made into swifty strings. Happily it was
off by default.  - Simplify the interface of
iTermScriptFunctionCall to remove all the extraneous cruft
that didn't belong.

2019-03-02: Add an alert built in function

2019-03-02: [python] Change iterm2.async_invoke_function to
take a connection as its first argument

2019-03-02: Make copy_api a little more verbose and less
error prone

2019-03-02: [api] Fix a bug where you couldn't explicitly
call a script-registered function that takes defaults
because it searched by the signature of the function with
only the provided arguments.

2019-03-01: Do not ask to download the python runtime when
autolaunching a script when the API is off.

2019-03-01: Get the process group id before killing the
process group. Fixes a bug where the REPL didn't get killed
properly

2019-03-01: Add pref to enable/disable API server. When
disabling, close all sockets, erase all subscriptions, and
kill all process groups. This has the added bonus of fixing
the Terminate button in the console to kill the process
group rather than the process since that would leave other
processes around (including the python script). Do not offer
to silence the prompt when the enable API alert is shown in
response to a user action like launching a script from the
menu.

2019-02-27: [api] Return default pref values

2019-02-27: [python] Update preferences

2019-02-25: Fix layout issues in status bar setup view and
remove a bogus menu item shortcut on CPU sampling

2019-02-24: Fix some layout bugs in lion fullscreen +
minimal + compact. Toolbelt was cut off, status bar
overlapped it with tabs on left, and when moving from tabs
on left to tabs on top they would be the wrong height and
internal orientation

2019-02-24: Fix duplicate identifier in main menu

2019-02-24: Add a titleOverrideFormat to windows. Fix a bug
where an empty tab title override would be used in place of
the session's name

2019-02-24: Improve how cycles among swifty strings and
variables are detected.

Construct a graph of dependencies between variables and
swifty strings. Detect dependency cycles by doing a search
on the graph.

Simplify attaching a swify string to a variable with its
format and a variable with its evaluation. They now take
care of it themselves without needing hand-holding.

Make swifty strings mutable so they can be long-lived to
avoid churning references.

Add iTermVariableDesignator which serves as a comparable
reference to a variable. It is used in the graph for
detecting cycles since a reference to a particular variable
could be made in many ways. The designator treats equivalent
references as equals.

Add iTermDirectedGraph.  Add -[NSArray
subarrayToIndexInclusive:].  Add -[NSString
stringByAppendingVariablePathComponent:].  Make
iTermVariableScope objects long-lived in PTYSession and
PTYTab because they store dangling references. Short-lived
scopes lose those before they can be resolved.

2019-02-23: Disable proxy icon for minimal theme and window
types without titlebars. Issue 7558

2019-02-21: Add support for advanced paste to pointer prefs.
Issue 6990

2019-02-21: Make
testRandomStuffAfterFileNameNotIdentifiedAsPartOfFile pass
for the right reason

2019-02-21: Change how semantic history finds line number
and column number suffixes. Before it would incorrectly
match everything after the line and column number. That bug
seems to have been there from day one. Issue 7518

2019-02-21: Add an advanced pref to not load from the find
pasteboard. Issue 7559.

2019-02-21: Handle 0/negative width properly in sparklines
components

2019-02-21: [statusbar] Fix a bug where preallocated views
would incorrectly use the whole statusbar

2019-02-21: Update the find driver when invalidating the
status bar, even when its position doesn't change (because
its desired state of existence may have)

2019-02-21: Prefs panel tweaks

2019-02-21: [status bar] Fix bug where there was only one
separator

2019-02-21: Improve minimal paste/find UI

2019-02-21: [statusbar] Respect priority and mandatory views
in stable layout algo

2019-02-19: Tweak vertical spacing of last checkbox in
profile window prefs to have equal spacing with those above
it

2019-02-19: Generalize nested tabviews in prefs. Give
general prefs a tabview

2019-02-19: Resize prefs window when changing tabs in
appearance or showing appearance pane

2019-02-19: When two downloads run concurrently, ensure they
don't pick the same destination filename. Reserve filenames
during the course of the download. Issue 7557

2019-02-18: Add support for DECRQM (ANSI and DEC flavors).
Also fix up some miscellaneous issues I noticed on the way:

- Fix failing tests - Fix a bug where cursorVisible was
initialized to NO. The actual visibility of the cursor was
initialized not based on the model in VT100Screen.  - Rename
terminalFocusReportingEnabled to
terminalFocusReportingAllowed to make it clearer what it
does - Don't prompt to enable the python API in unit tests.
Also don't create the server becase we don't want to try to
listen on a socket during tests.

2019-02-18: Make it possible to use the password manager
from the scp keyboard interactive prompt. Issue 7554.

2019-02-18: Use a visual effect view in the password manager

2019-02-18: Fix bugs in edit tab window/title. Also add a
menu item to edit tab title. Issue 7550.

2019-02-18: [python] Add script to change color presets
based on time of day

2019-02-18: Update window decoration colors in root terminal
view when main status changes

2019-02-18: Use main rather than key status to decide if
tabbar should be shown washed out. Issue 7552

2019-02-18: Remove some debugging code and unsetenv
ITERM2_DISABLE_BOOTSTRAP in shell launcher process

2019-02-18: Add an advacned pref to disable bootstrapping so
touchid for sudo can be used. Issue 7527

2019-02-18: Add a few more tests

2019-02-17: Add support for arrays. Begin adding tests of
function calls and interpolated string evaluations. This
commit might break random things in existing scripts because
it's not sufficiently tested yet.

2019-02-17: Save window title override across restarts

2019-02-17: Try using the new type-safe variables and fix a
bunch of bugs in them. Also, discovered a horrible wart of
Objective-C. If you invoke [MyClass<MyProtocol> foo] where
foo is declared by some protocol other than MyProtocol (and
is privately implemented in a category of MyClass) there's
no compiler warning. If you give the compiler less
information by saying id<MyProtocol> it checks it properly.
Fun.

2019-02-17: Add type-safe categories on variable scopes

2019-02-17: Make it possible to set the tab and window title
overrides from Edit Session. Plumb scopes through to the
general prefs view controller.

2019-02-16: Handle flags-changed events for the purpose of
double-tap modifier hotkey window toggling through
-sendEvent when secure input is enabled. Issue 7375

2019-02-16: Comment out cask-repair

2019-02-16: Disable window shadow with transparency prior to
mojave by default because I got a second report of the issue
in 7542

2019-02-16: Grid align window title label. Issue 7541

2019-02-16: Make lion fullscreen transitions buttery smooth

Note this commit has a lot of 10.14-only code, which is
mostly because I'm reluctant to make changes to the 10.13
code paths which are different in so many ways. It is
totally possible that some of these improvements would be
worthwhile in 10.13.

2019-02-16: Improve color and animation of find view and
paste view

2019-02-16: Fix minimal find view and paste view

2019-02-14: Update look of find and paste progress boxes to
look more modern. Issue 7540

2019-02-14: Use a big hammer to prevent sessions from
resizing during drag of a pane or a tab: check if a drag is
in progress anywhere, and disallow all resizing. Also fixes
a bug with swapping a pane where it didn't get resized.
Issue 7279.

2019-02-13: Add a new trigger type to create annotations. It
is super cool when used with registered functions. Issue
5772

2019-02-13: Fix the broken 'Show Notes' context menu item.

2019-02-13: Disable Metal when annotations are open. This
should be cherrypicked to 3.2

2019-02-13: Add option to import profiles from JSON. Issue
7533

2019-02-11: Remove assertion. The interval tree can
represent negative values. Because it does not deserialize
them, we should be safe.

2019-02-11: Update the stable layout algorithm to
preallocate space to infinite-priority views (find and paste
progress) so they don't get too squished if the sum of
spring constants of the other views is extremely large.

2019-02-11: Some voiceover improvements: remove trailing
newlines, fix a crash when VO asks for a bogus range, and
only mark it changed when updateDirty finds something.

2019-02-11: ARCify ToolCommandHistoryView. Issue 7534.

2019-02-10: Offer to replace an existing script rather than
aborting installation. This makes upgrading easier.

2019-02-10: Improve error handling for running and
installing scripts

2019-02-10: Tweak compact title and minimal tab colors.

2019-02-10: Fix how we avoid enumerating subdirs of app
support to actually work

2019-02-10: Unbreak edit session pref panel

2019-02-10: When toggling traditional fullscreen for any of
the windows without a titlebar besides compact (top of
screen, etc.) replace the window because it has the
compact-style window class which gives it an ugly titlebar.

2019-02-10: Hackily detect when the IME window is open and
adjust floating hotkey windows' levels down. Issue 7521

2019-02-10: Avoid enumerating nested directories in
application support at startup because the python API takes
an eternity

2019-02-10: Prevent restoring intervals into interval trees
with negative limits. Not quite sure where they came from
but they are definitely unwelcome.

2019-02-10: [python] Bump version

2019-02-10: [python] Update docstring for
async_invoke_function in all contexts

2019-02-10: Hide tabbar backing visual effect view only in
minimal theme. Fixes a bug where the titlebar was completely
transparent when using auto theme + macos dark mode +
compact window + no tabbar.

2019-02-10: Fix nightly build. Update sign_update to the
version from my fork of Sparkle at commit
d163511d43fa00d5b661b4f57b5f192b6c35df93

2019-02-10: Add the ability for scripts to invoke registered
functions. Register a move-tab-to-window builtin function.
Add APIs to call it and to invoke functions in the various
contexts. Still needs more testing.

2019-02-09: Fix a bug where the text view wrapper always
drew a top margin of 2, not the configured value. Issue 7520

2019-02-09: Work around bug in Mojave where the profiles
tabview didn't get all its labels drawn when the window
resizes. It really doesn't like being too small to fit all
the tabs, and when it grows it forgets to redraw itself. The
solution is to parent it in a view that refuses to make it
smaller than the safe minimum, which I simply hardcoded in
the interest of simplicity.

2019-02-09: Fix vertical alignment problem in appearance
prefs panes and dimming subtabs

2019-02-09: Add the option to preserve window size when the
tab bar shows/hides. Issue 5768

2019-02-09: Add an inner tabview to appearance prefs so I
can add to it without making it look uneven. It also looks
less intimidating now.

2019-02-09: Add git.sb

2019-02-07: Fix various inconsistencies in retain/release in
SIG code, and rename ivars not starting with _

2019-02-07: Add sanity checks to diagnose interval tree
entry with negative limit. Issue 7519

2019-02-07: Fix a bug where swifty strings didn't capture
their referenced variables

2019-02-07: Make trigger evaluation async so it can call out
to script-provided RPCs. Issue 7523

2019-02-07: Add an advanced pref to show a hint about split
pane direction in menu items. Issue 7524

2019-02-07: [statusbar] Run git in a sandbox to avoid
touching lock files. This is a cheaper solution than using a
modern version of git that includes --no-optional-locks,
since I'd have to distribute my own git binary because macOS
is (shocker) out of date. I also have more confidence that
this actually won't write anything.

2019-02-07: Update README.md

2019-02-07: Properly center window title on compact windows.
Issue 7528

2019-02-05: Ensure glyphSize is an integer. Should fix the
buffer overflow in performPostProcessing

2019-02-05: Clear bell when a session becomes active, either
by change split panes, changing tabs, or the window becoming
key. Add an advanced pref so users can revert to the
previous stickier behavior. Issue 7496

2019-02-05: Ignore carbon hotkeys while an app modal window
exists. Issue 7487

2019-02-05: Ask for accessibility permissions after failing
to create an event tap

2019-02-05: Bump up default prominence of text of
non-selected tabs when a tab has a colored background

2019-02-05: [cherrypick] Adjust text color for non-selected
tabs when one tab has a tab color. Because on Mojave we use
a visual effect view with a 25% black scrim over it we can't
be sure what the background color is. It's smarter to draw
black or white with some alpha blending instead. The alpha
blending level will be co ntrolled by the text prominence
setting. This makes a big difference in dark mode. Issue
7485

2019-02-05: Remember the vertical proportions of toolbelt
tools. Issue 7482

2019-02-05: Tell xcode I like my build settings just fine
thank you

2019-02-05: [cherrypick] Try harder to respect the default
toolbelt width. Do not constrain the toolbelt size in init,
before the view's frame's width is known. Just before
showing the toolbelt, constrain its width based on the size
we are willing to make the window.  Issue 4820

2019-02-05: Add downloadable archives of the tutorial
scripts

2019-02-05: Update change profile open quickly icon

2019-02-05: Remove log spam

2019-02-05: Remove gross hacks for open quickly window
highlighting in 10.14. I don't have a 10.13 machine to test
on at the moment so the change is limited to 10.14, but
it'll probably work on older OS versions

2019-02-05: Update script icon in open quickly

2019-02-05: Give cask-repair no input to fix it hanging

2019-02-04: When choosing a language, include all leading
three letter language codes and the first two-letter code.
Issue 5478

2019-02-04: Simplify iTermNotification

2019-02-04: [python] Update tutorial

2019-02-03: Add context menu to status bar components to
edit them (Issue 7516). Also fix a bug where rows & columns
wasn't always set in session variables (for restored
sessions), and fix a bug where text components that get
longer in equally spaced status bars become blank because
they don't get laid out again

2019-02-03: Fix messed up drawing in visible part of
TextViewWrapper (at the top of the text view). Issue 7506. I
wonder if I shouldn't use contentInsets instead of
TextViewWrapper. Doing so would require changing how
backgrounds are drawn to be drawn by a view behind the
scroll view, and I doubt that macOS could competently
composite views prior to 10.14.

2019-02-03: Sign all but developer builds with Developer ID
Application.

2019-02-02: Add support for legacy/traditional/modern to
beta and stable build scripts

2019-02-02: Update nightly build to use
legacy/transitional/modern appcasts

2019-02-02: Modernize app update a bit.

- Update sparkle to version 1.21.2, with my local changes
from https://github.com/gnachman/Sparkle.git (commit
2d63dd11408fda8e18fc60202143806f73ffed01) - Switch to
ED25519 signing - Modify appcast generation to use ED
signatures as well as legacy DSA signatures.  - Enable
signing for the nightly build (TBD if this actually works) -
Change nightly build to always update to nightly build,
irrespective of the 'beta' setting in prefs - Point all
builds at new appcasts, which will have only EdDSA keys.

The next beta, stable, and nightly build will be
"transitional" and will have both keys. Eventually, I will
stop distributing builds with DSA keys. Users on older
builds that have only DSA keys will need to upgrade to a
transitional build before they can upgrade to an EdDSA-only
build. The reasoning is documented here:
https://github.com/sparkle-project/Sparkle/issues/1355

2019-02-02: Make window title colors respond to key/not key
and match the shortcut accessory color

2019-02-02: Dim the window shortcut accessory when not key

2019-02-02: Tweak window number label font.

2019-02-02: Remove the menu opener. It was buggy and
annoying. Use notification instead.

2019-02-02: Make default scheme configurable and change it
from http to https. Issue 7507

2019-02-01: Rename advanced pref for disabling shadows pre
mojave

2019-02-01: Add an advanced pref to disable window shadow
pre-mojave

2019-02-01: Deal with double-attaching to a tmux session by
offering to reveal the windows/dashboard. Also fixes a bug
where burying a tmux session makes it disappear
irretrievably. Issue 7380

2019-02-01: Remove the full disk access crap. I'm optimistic
that the Info.plist change obviated its need

2019-02-01: Add NSSystemAdministrationUsageDescription. See
PR 382 for details

2019-02-01: [api] Show indeterminate progress indicator
while installing Python runtime. Various improvements to
error handling around cancellation.

2019-02-01: [api] Close the optional component downloader
after you cancel updating the Python runtime

2019-02-01: [api] When you run a python script check for an
updated version of the runtime if it's been at least 2 days
since the last check. Adds iTermPersistentRateLimitedUpdate
to make this easier to do.

2019-02-01: Don't check for runtime updates when you check
for app updates. It's silly.

2019-02-01: Finish implementing move of tmux max windows
setting to dashboard. Make it possible to open the dashboard
when not connected. Make tmux uses dedicated profile a first
class setting.

2019-02-01: Move max number of tmux windows into dashboard.
Add a type safe notification center replacement. Let's see
if it works.

2019-02-01: Assign key equivalents to buttons in alerts. Add
an advanced pref to underline them. Issue 7505

2019-01-31: Fix C-b and C-f in copy mode. Issue 7501

2019-01-31: Fix various bugs with setting the badge font
